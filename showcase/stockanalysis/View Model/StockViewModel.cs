#region Copyright Syncfusion Inc. 2001 - 2024
// Copyright Syncfusion Inc. 2001 - 2024. All rights reserved.
// Use of this code is subject to the terms of our license.
// A copy of the current license can be obtained at any time by e-mailing
// licensing@syncfusion.com. Any infringement will be prosecuted under
// applicable laws. 
#endregion
using Syncfusion.Data.Extensions;
using Syncfusion.Windows.Shared;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Windows.Input; 
using System.Windows.Threading;

namespace syncfusion.stockanalysisdemo.wpf
{
    public class StockViewModel: INotifyPropertyChanged
    {
        private ICommand addCommand;
        public ObservableCollection<Stock> MySuggestedStockCollection { get; set; }
        public ObservableCollection<Stock> MyWatchListStockCollection { get; set; } 
        public ObservableCollection<StockData> AAPLStockDetails { get; set; }
        public ObservableCollection<StockData> MSFTStockDetails { get; set; }
        public ObservableCollection<StockData> GOOGStockDetails { get; set; }
        public ObservableCollection<StockData> AMZNStockDetails { get; set; }
        public ObservableCollection<StockData> TSLAStockDetails { get; set; }
        public ObservableCollection<StockData> METAStockDetails { get; set; }
        public ObservableCollection<StockData> IBMStockDetails { get; set; }
        public ObservableCollection<StockData> ADBEStockDetails { get; set; }
        public ObservableCollection<StockData> TWTRStockDetails { get; set; }
        public ObservableCollection<StockData> TCSStockDetails { get; set; }
        public ObservableCollection<StockData> INTCStockDetails { get; set; }
        public ObservableCollection<StockData> HDBStockDetails { get; set; }
        public ObservableCollection<StockData> WIPROStockDetails { get; set; }
        public ObservableCollection<StockData> BELStockDetails { get; set; }
        public ObservableCollection<StockData> AAPL { get; set; }
        public ObservableCollection<StockData> MSFT { get; set; }
        public ObservableCollection<StockData> GOOG { get; set; }
        public ObservableCollection<StockData> AMZN { get; set; }
        public ObservableCollection<StockData> TSLA { get; set; }
        public ObservableCollection<StockData> META { get; set; }
        public ObservableCollection<StockData> IBM { get; set; }
        public ObservableCollection<StockData> ADBE { get; set; }  
        public ObservableCollection<StockData> TWTR { get; set; }
        public ObservableCollection<StockData> TCS { get; set; }
        public ObservableCollection<StockData> INTC { get; set; }
        public ObservableCollection<StockData> HDB { get; set; }
        public ObservableCollection<StockData> WIPRO { get; set; }
        public ObservableCollection<StockData> BEL { get; set; }

        private ObservableCollection<StockData> stockDetails;
        public ObservableCollection<StockData> StockDetails
        {
            get { return stockDetails; }
            set
            {
                stockDetails = value;
                OnPropertyChanged("StockDetails");
            }
        } 
        private ObservableCollection<StockData> stockDatas;
        public ObservableCollection<StockData> StockDatas
        {
            get { return stockDatas; }
            set
            {
                stockDatas = value;
                OnPropertyChanged("StockDatas");
            }
        }
        private ObservableCollection<StockData> stockCollection;
        public ObservableCollection<StockData> StockCollection
        {
            get { return stockCollection; }
            set
            {
                stockCollection = value;
                OnPropertyChanged("StockCollection");
            }
        } 
        private int listViewIndex;
        DateTime date = new DateTime();
        public ObservableCollection<StockData> StockItemSource { get; set; } 
        public int ListViewIndex
        {
            get { return listViewIndex; }
            set
            {
                listViewIndex = value;
                OnPropertyChanged("ListViewIndex");
            }
        }
        private bool needToUpdate;
        public bool needToRemove;
        public bool NeedToUpdate
        {
            get { return needToUpdate; }
            set
            {
                needToUpdate = value;
                OnPropertyChanged("NeedToUpdate");
            }
        }
        Random r = new Random(); 
        internal DispatcherTimer ListViewTimer;

        DateTime Today = DateTime.Now;
        private DateTime yesterday; 
        public DateTime Yesterday
        {
            get { return yesterday; }
            set
            {
                yesterday = value;
                OnPropertyChanged("Yesterday");
            }
        }  
        public IEnumerable<StockData> ReadCSV(string fileName)
        { 
            ObservableCollection<string> lines = File.ReadAllLines(fileName).ToObservableCollection(); 
            lines.RemoveAt(0);
             
            return lines.Select(line =>
            {
                string[] data = line.Split(',');  
                return new StockData(data[0], Convert.ToDateTime(data[1]), Convert.ToDouble(data[2]), Convert.ToDouble(data[3]), Convert.ToDouble(data[4]), Convert.ToDouble(data[5]), Convert.ToDouble(data[6]));
            });
        }
        public StockViewModel()
        {
            NeedToUpdate = true;
            AddChartItemsSource();
            StockCollection = AAPL; 
            var path = @"Assets\" + "StockItemSource" + ".csv";

            StockItemSource = new ObservableCollection<StockData>(ReadCSV(path)); 

            AAPLStockDetails = AddStockItemsSource("AAPL");
            MSFTStockDetails = AddStockItemsSource("MSFT");
            GOOGStockDetails = AddStockItemsSource("GOOG");
            AMZNStockDetails = AddStockItemsSource("AMZN");
            TSLAStockDetails = AddStockItemsSource("TSLA");
            METAStockDetails = AddStockItemsSource("META");
            IBMStockDetails = AddStockItemsSource("IBM");
            ADBEStockDetails = AddStockItemsSource("ADBE");
            TWTRStockDetails = AddStockItemsSource("TWTR");
            TCSStockDetails = AddStockItemsSource("TCS");
            INTCStockDetails = AddStockItemsSource("INTC");
            HDBStockDetails = AddStockItemsSource("HDB");
            WIPROStockDetails = AddStockItemsSource("WIPRO");
            BELStockDetails = AddStockItemsSource("BEL");

            AddListViewItemsSource();

            this.ListViewTimer = new DispatcherTimer();
            ListViewTimer.Interval = TimeSpan.FromSeconds(15);
            ListViewTimer.Tick += ListViewTimer_Tick; 
            Yesterday = DateTime.Now.AddDays(-1);  
        }

        public void AddListViewItemsSource()
        { 
            addCommand = new DelegateCommand<object>(ChangeAddIcon);

            MySuggestedStockCollection = new ObservableCollection<Stock>();
            MyWatchListStockCollection = new ObservableCollection<Stock>();
            MySuggestedStockCollection.Add(new Stock { StockName = "AAPL", Company = "Apple Inc.",  CurrentClose = 173.32, CurrentChange = "+0.12", CurrentHigh = "+0.21", PreviousClose=175.43, Rating= "Buy", StockVolume = "70925200", StockLogo = "/syncfusion.stockanalysisdemo.wpf;component/Assets/Apple.png", Graph = "M1 11.517C1 11.517 17.2689 17.7214 18.6549 17.7121C20.041 17.7027 19.9928 17.0946 20.8593 17.2162C21.7257 17.3378 22.3155 19.4978 23.1999 19.8773C24.0843 20.2568 25.0469 20.0541 25.7689 20.1757C26.491 20.2973 26.7847 22 27.7449 22C28.7051 22 34.113 15.4195 35.2117 15.4195C36.3103 15.4195 36.6846 16.9054 37.4842 16.9054C38.2838 16.9054 39.256 16.2014 39.7567 16.1412C40.2573 16.0811 40.7696 16.9054 41.3798 16.9054C41.9901 16.9054 43.1239 15.4877 43.977 15.4195C44.8301 15.3514 45.8388 16.1412 46.8988 16.1412C47.9588 16.1412 49.9474 14.7854 51.1191 14.8251C52.2908 14.8649 54.2968 16.863 55.3395 16.1412C56.3822 15.4195 58.2364 9.89961 58.7533 9.36196C59.2703 8.82432 60.5223 6.73771 61.1718 6.50399C61.8214 6.27027 62.7119 6.48175 63.5903 6.1125C64.4688 5.74324 65.3202 4.28106 66.1701 3.81621C67.0199 3.35135 68.8718 1 70.0397 1C71.2076 1 72.5775 3.45478 73.2644 4.01117C73.9512 4.56757 79.2127 10.6958 80.9862 10.8344C82.7597 10.973 85.605 9.71584 86.8297 9.85792C88.0545 10 89.2425 10.6146 90 10.7703", Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z" });
            MySuggestedStockCollection.Add(new Stock { StockName = "MSFT", Company = "Microsoft Crp.", CurrentClose = 324.01, CurrentChange = "+0.04", CurrentHigh = "+0.13", PreviousClose = 313.85, Rating = "Buy", StockVolume = "191649200", StockLogo = "/syncfusion.stockanalysisdemo.wpf;component/Assets/Microsoft.png", Graph = "M1 11.517C1 11.517 6 16.9324 10 16.9054C14 16.8784 15 5 18 5C21 5 21.5 10.8588 22 13.5C22.5 16.1412 23 18 23 18C23 18 24.2449 22.5 27 22.5C29.7551 22.5 31.5 10.8344 33.5 10.8344C35.5 10.8344 36.7004 17.5 37.5 17.5C38.2996 17.5 39.256 16.2014 39.7567 16.1412C40.2573 16.0811 40.7696 16.9054 41.3798 16.9054C41.9901 16.9054 43.1239 15.4877 43.977 15.4195C44.8301 15.3514 45.8388 16.1412 46.8988 16.1412C47.9588 16.1412 49.9474 14.7854 51.1191 14.8251C52.2908 14.8649 54.2968 16.863 55.3395 16.1412C56.3822 15.4195 58.2364 9.89961 58.7533 9.36197C59.2703 8.82432 60.5223 6.73771 61.1718 6.50399C61.8214 6.27027 62.7119 6.48175 63.5903 6.1125C64.4688 5.74324 65.3202 4.28106 66.1701 3.81621C67.0199 3.35135 68.8718 1 70.0397 1C71.2076 1 73.3132 3.25981 74 3.81621C74.6868 4.3726 79.2127 10.6958 80.9862 10.8344C82.7598 10.973 83.5 7.8875 84.5 7C85.5 6.1125 88 6.50399 90.5 8", Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z"});
            MySuggestedStockCollection.Add(new Stock { StockName = "GOOG", Company = "Alphabet Inc.", CurrentClose = 124.06, CurrentChange = "+0.62", CurrentHigh = "+0.77", PreviousClose = 125.43, Rating = "Strong Buy", StockVolume = "121150800", StockLogo = "/syncfusion.stockanalysisdemo.wpf;component/Assets/Alphabet.png", Graph = "M0.5 11.0186C0.5 11.0186 6 3.01855 9.5 3.01855C13 3.01855 15 13.0186 17.5 13.0186C20 13.0186 26.3155 18.5163 27.1999 18.8958C28.0842 19.2753 29.0469 19.0726 29.7689 19.1942C30.491 19.3158 30.7847 21.0185 31.7449 21.0185C32.7051 21.0185 38.113 14.438 39.2117 14.438C40.3103 14.438 40.6846 15.924 41.4842 15.924C42.2838 15.924 43.256 15.2199 43.7567 15.1598C44.2573 15.0996 44.7696 15.924 45.3798 15.924C45.9901 15.924 47.1239 14.5062 47.977 14.438C48.8301 14.3699 49.8388 15.1598 50.8988 15.1598C51.9588 15.1598 53.9474 13.8039 55.1191 13.8437C56.2908 13.8834 58.2968 15.8815 59.3395 15.1598C60.3822 14.438 61 11.5185 61 11.5185C61 11.5185 62.5 5.87834 63.5 5.51853C64.5 5.15872 66.7119 5.50028 67.5903 5.13103C68.4688 4.76177 69.6502 1.48332 70.5 1.01847C71.3498 0.553613 73.8321 9.01853 75 9.01853C76.1679 9.01853 79.3132 5.46208 80 6.01847C80.6868 6.57486 83.2127 9.71432 84.9862 9.85291C86.7598 9.9915 87.7752 7.37645 89 7.51853C90.2248 7.66061 92.2425 10.8629 93 11.0185", Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z" });
            MySuggestedStockCollection.Add(new Stock { StockName = "AMZN", Company = "Amzon Inc.", CurrentClose = 116.04, CurrentChange = "+0.02", CurrentHigh = "+0.03", PreviousClose = 120.11, Rating = "Neutral", StockVolume = "73234000", StockLogo = "/syncfusion.stockanalysisdemo.wpf;component/Assets/Amazon.png", Graph = "M90 11.517C90 11.517 85 16.9324 81 16.9054C77 16.8784 76 5 73 5C70 5 69.5 10.8588 69 13.5C68.5 16.1412 68 18 68 18C68 18 66.7551 22.5 64 22.5C61.2449 22.5 59.5 10.8344 57.5 10.8344C55.5 10.8344 54.2996 17.5 53.5 17.5C52.7004 17.5 51.744 16.2014 51.2433 16.1412C50.7427 16.0811 50.2304 16.9054 49.6202 16.9054C49.0099 16.9054 47.8761 15.4877 47.023 15.4195C46.1699 15.3514 45.1612 16.1412 44.1012 16.1412C43.0412 16.1412 41.0526 14.7854 39.8809 14.8251C38.7092 14.8649 36.7032 16.863 35.6605 16.1412C34.6178 15.4195 32.7636 9.89961 32.2467 9.36197C31.7297 8.82432 30.4777 6.73771 29.8282 6.50399C29.1786 6.27027 28.2881 6.48175 27.4097 6.1125C26.5312 5.74324 25.6798 4.28106 24.8299 3.81621C23.9801 3.35135 22.1282 1 20.9603 1C19.7924 1 17.6868 3.25981 17 3.81621C16.3132 4.3726 11.7873 10.6958 10.0138 10.8344C8.24025 10.973 7.5 7.8875 6.5 7C5.5 6.1125 3 6.50399 0.5 8", Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z" });
            MySuggestedStockCollection.Add(new Stock { StockName = "TSLA", Company = "Tesla Inc.", CurrentClose = 184.61, CurrentChange = "+0.04", CurrentHigh = "+0.09", PreviousClose = 193.17, Rating = "Neutral", StockVolume = "153991500", StockLogo = "/syncfusion.stockanalysisdemo.wpf;component/Assets/Tesla.png", Graph = "M1 11.483C1 11.483 17.2689 5.27857 18.6549 5.28793C20.041 5.2973 19.9929 5.90541 20.8593 5.78378C21.7257 5.66216 22.3155 3.50224 23.1999 3.12274C24.0842 2.74324 25.0469 2.94595 25.7689 2.82433C26.491 2.7027 26.7847 1 27.7449 1C28.7051 1 34.113 7.5805 35.2117 7.5805C36.3103 7.5805 36.6846 6.09458 37.4842 6.09458C38.2838 6.09458 39.256 6.79861 39.7567 6.85876C40.2573 6.91892 40.7696 6.09458 41.3798 6.09458C41.9901 6.09458 43.1239 7.51234 43.977 7.5805C44.8301 7.64865 45.8388 6.85876 46.8988 6.85876C47.9588 6.85876 49.9474 8.2146 51.1191 8.17487C52.2908 8.13514 54.2968 6.13703 55.3395 6.85876C56.3822 7.5805 58.2364 13.1004 58.7533 13.638C59.2703 14.1757 60.5223 16.2623 61.1718 16.496C61.8214 16.7297 62.7119 16.5182 63.5903 16.8875C64.4688 17.2568 65.3202 18.7189 66.1701 19.1838C67.0199 19.6486 68.8718 22 70.0397 22C71.2076 22 72.3132 18.5564 73 18C73.6868 17.4436 76.5 4.65629 78.5 4.5C80.5 4.34371 81.5 6.85876 83 10C84.5 13.1412 86 2.77027 88 5", Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z" });
            MySuggestedStockCollection.Add(new Stock { StockName = "META", Company = "META Inc.", CurrentClose = 252.92, CurrentChange = "+0.08", CurrentHigh = "+0.21", PreviousClose = 246.74, Rating = "Buy", StockVolume = "112683300", StockLogo = "/syncfusion.stockanalysisdemo.wpf;component/Assets/Meta.png", Graph = "M1 14.4211C1 14.4211 3.49445 10.7769 5.84225 10.7277C8.19005 10.6785 9.31503 14.9252 12.3965 14.9252C15.478 14.9252 16.5052 7.9858 18.5106 7.9858C20.516 7.9858 21.3964 11.6755 23.7442 11.6755C26.092 11.6755 28.0485 2.09578 30.2006 2.09578C32.3528 2.09578 33.3396 9.57679 34.456 9.57679C35.5724 9.57679 34.7006 5.08367 36.8527 5.48085C39.0049 5.87803 38.1245 1.92653 39.0049 1.92653C39.8853 1.92653 40.7168 5.95476 41.8907 5.95476C43.0646 5.95476 43.2249 4.10376 44.0918 4.16067C44.9586 4.21758 45.9505 7.8504 46.9776 7.8504C48.0048 7.8504 48.2493 6.32712 48.9341 5.14234C49.6189 3.95757 50.0865 1 51.7504 1C53.4144 1 54.6569 16.6177 56.0753 17.3963C57.4938 18.1749 58.3253 15.5348 59.8905 15.7547C61.4557 15.9746 61.5535 22 63.2654 22C64.9774 22 64.9285 17.701 66.5426 17.701C68.1567 17.7009 69.2688 12.6911 70.4556 12.6911C71.6423 12.6911 71.9535 20.6366 74.286 20.6366C76.6185 20.6366 78.5 14.9252 78.5 14.9252C78.5 14.9252 80.5 8.04104 82.5 7.8504C84.5 7.65976 88.2594 19.8553 91 19.5", Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z" });
            MySuggestedStockCollection.Add(new Stock { StockName = "IBM", Company = "IBM Crp.", CurrentClose = 127.05, CurrentChange = "+0.19", CurrentHigh = "+0.25", PreviousClose = 120.52, Rating = "Buy", StockVolume = "168904800", StockLogo = "/syncfusion.stockanalysisdemo.wpf;component/Assets/IBM.png",  Graph = "M1 5.69173C1 5.69173 3.49445 7.9476 5.84225 7.97808C8.19005 8.00856 9.31503 5.37964 12.3965 5.37964C15.478 5.37964 16.5052 9.67546 18.5106 9.67546C20.516 9.67546 21.3964 7.39134 23.7442 7.39134C26.092 7.39134 28.0485 13.3217 30.2006 13.3217C32.3528 13.3217 33.3396 8.69056 34.456 8.69056C35.5724 8.69056 34.7006 11.472 36.8527 11.2261C39.0049 10.9803 38.1245 13.4264 39.0049 13.4264C39.8853 13.4264 40.7168 10.9328 41.8907 10.9328C43.0646 10.9328 43.2249 12.0786 44.0918 12.0434C44.9586 12.0082 45.9504 9.75928 46.9776 9.75928C48.0048 9.75928 48.2493 10.7023 48.9341 11.4357C49.6189 12.1691 50.0865 14 51.7504 14C53.4144 14 54.6569 4.33188 56.0753 3.84991C57.4938 3.36794 58.3253 5.00226 59.8905 4.86614C61.4557 4.73003 61.5535 0.999999 63.2654 1C64.9774 1 64.9285 3.6613 66.5426 3.66131C68.1567 3.66132 69.2688 6.76268 70.4556 6.76268C71.6423 6.76268 71.9535 1.84399 74.286 1.84399C76.6185 1.84399 80.7761 9.67546 80.7761 9.67546C80.7761 9.67546 83.589 13.9188 84.8336 13.9922C86.0782 14.0657 88.2594 12.3139 91 12.5338", Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z"});
            MySuggestedStockCollection.Add(new Stock { StockName = "ADBE", Company = "Adobe Inc.", CurrentClose = 396.72, CurrentChange = "+1.73", CurrentHigh = "+6.53", PreviousClose = 411.42, Rating = "Strong Buy", StockVolume = "158066000", StockLogo = "/syncfusion.stockanalysisdemo.wpf;component/Assets/Adobe.png", Graph = "M1 9.30827C1 9.30827 3.49445 7.0524 5.84225 7.02191C8.19005 6.99143 9.31503 9.62036 12.3965 9.62036C15.478 9.62036 16.5052 5.32454 18.5106 5.32454C20.516 5.32454 21.3964 7.60866 23.7442 7.60866C26.092 7.60866 28.0485 1.67834 30.2006 1.67834C32.3528 1.67834 33.3396 6.30944 34.456 6.30944C35.5724 6.30944 34.7006 3.52798 36.8527 3.77386C39.0049 4.01973 38.1245 1.57356 39.0049 1.57356C39.8853 1.57356 40.7168 4.06723 41.8907 4.06723C43.0646 4.06723 43.2249 2.92137 44.0918 2.9566C44.9586 2.99183 45.9505 5.24072 46.9776 5.24072C48.0048 5.24072 48.2493 4.29774 48.9341 3.5643C49.6189 2.83087 50.0865 0.999998 51.7504 0.999998C53.4144 0.999998 54.6569 10.6681 56.0753 11.1501C57.4938 11.6321 58.3253 9.99774 59.8905 10.1339C61.4557 10.27 61.5535 14 63.2654 14C64.9774 14 64.9285 11.3387 66.5426 11.3387C68.1567 11.3387 69.2688 8.23732 70.4556 8.23732C71.6423 8.23732 71.9535 13.156 74.286 13.156C76.6185 13.156 80.7761 5.32454 80.7761 5.32454C80.7761 5.32454 83.589 1.08121 84.8336 1.00777C86.0782 0.934328 88.7594 12.7199 91.5 12.5", Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z"});
            MySuggestedStockCollection.Add(new Stock { StockName = "TWTR", Company = "Twitter Inc.", CurrentClose = 173.32, CurrentChange = "+0.12", CurrentHigh = "+0.21", PreviousClose = 175.05, Rating = "Buy", StockVolume = "70925200", StockLogo = "/syncfusion.stockanalysisdemo.wpf;component/Assets/Twitter.png",  Graph = "M1 8.57895C1 8.57895 3.49445 12.2231 5.84225 12.2723C8.19005 12.3215 9.31503 8.0748 12.3965 8.0748C15.478 8.0748 16.5052 15.0142 18.5106 15.0142C20.516 15.0142 21.3964 11.3245 23.7442 11.3245C26.092 11.3245 28.0485 20.9042 30.2006 20.9042C32.3528 20.9042 33.3396 13.4232 34.456 13.4232C35.5724 13.4232 34.7006 17.9163 36.8527 17.5192C39.0049 17.122 38.1245 21.0735 39.0049 21.0735C39.8853 21.0735 40.7168 17.0452 41.8907 17.0452C43.0646 17.0452 43.2249 18.8962 44.0918 18.8393C44.9586 18.7824 45.9504 15.1496 46.9776 15.1496C48.0048 15.1496 48.2493 16.6729 48.9341 17.8577C49.6189 19.0424 50.0865 22 51.7504 22C53.4144 22 54.6569 6.38226 56.0753 5.6037C57.4938 4.82513 58.3253 7.46518 59.8905 7.24531C61.4557 7.02543 61.5535 0.999998 63.2654 1C64.9774 1 64.9285 5.29902 66.5426 5.29904C68.1567 5.29906 69.2688 10.3089 70.4556 10.3089C71.6423 10.3089 71.9535 2.36336 74.286 2.36336C76.6185 2.36336 80.7761 15.0142 80.7761 15.0142C80.7761 15.0142 83.589 21.8688 84.8336 21.9874C86.0782 22.1061 88.2594 19.2763 91 19.6316", Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z"});
            MySuggestedStockCollection.Add(new Stock { StockName = "TCS", Company = "TCS Ltd.", CurrentClose = 3366.00, CurrentChange = "+0.29", CurrentHigh = "+10.00", PreviousClose = 3356.80, Rating = "Neutral", StockVolume = "1190425", StockLogo = "/syncfusion.stockanalysisdemo.wpf;component/Assets/TCS.png", Graph = "M1 11.483C1 11.483 17.2689 5.27857 18.6549 5.28793C20.041 5.2973 19.9929 5.90541 20.8593 5.78378C21.7257 5.66216 22.3155 3.50224 23.1999 3.12274C24.0842 2.74324 25.0469 2.94595 25.7689 2.82433C26.491 2.7027 26.7847 1 27.7449 1C28.7051 1 34.113 7.5805 35.2117 7.5805C36.3103 7.5805 36.6846 6.09458 37.4842 6.09458C38.2838 6.09458 39.256 6.79861 39.7567 6.85876C40.2573 6.91892 40.7696 6.09458 41.3798 6.09458C41.9901 6.09458 43.1239 7.51234 43.977 7.5805C44.8301 7.64865 45.8388 6.85876 46.8988 6.85876C47.9588 6.85876 49.9474 8.2146 51.1191 8.17487C52.2908 8.13514 54.2968 6.13703 55.3395 6.85876C56.3822 7.5805 58.2364 13.1004 58.7533 13.638C59.2703 14.1757 60.5223 16.2623 61.1718 16.496C61.8214 16.7297 62.7119 16.5182 63.5903 16.8875C64.4688 17.2568 65.3202 18.7189 66.1701 19.1838C67.0199 19.6486 68.8718 22 70.0397 22C71.2076 22 72.3132 18.5564 73 18C73.6868 17.4436 76.5 4.65629 78.5 4.5C80.5 4.34371 81.5 6.85876 83 10C84.5 13.1412 86 2.77027 88 5", Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z" });
            MySuggestedStockCollection.Add(new Stock { StockName = "INTC", Company = "Intel Crp.", CurrentClose = 35.79, CurrentChange = "+0.16", CurrentHigh = "+0.06", PreviousClose = 35.73, Rating = "Buy", StockVolume = "58890800", StockLogo = "/syncfusion.stockanalysisdemo.wpf;component/Assets/Intel.png", Graph = "M1 14.4211C1 14.4211 3.49445 10.7769 5.84225 10.7277C8.19005 10.6785 9.31503 14.9252 12.3965 14.9252C15.478 14.9252 16.5052 7.9858 18.5106 7.9858C20.516 7.9858 21.3964 11.6755 23.7442 11.6755C26.092 11.6755 28.0485 2.09578 30.2006 2.09578C32.3528 2.09578 33.3396 9.57679 34.456 9.57679C35.5724 9.57679 34.7006 5.08367 36.8527 5.48085C39.0049 5.87803 38.1245 1.92653 39.0049 1.92653C39.8853 1.92653 40.7168 5.95476 41.8907 5.95476C43.0646 5.95476 43.2249 4.10376 44.0918 4.16067C44.9586 4.21758 45.9505 7.8504 46.9776 7.8504C48.0048 7.8504 48.2493 6.32712 48.9341 5.14234C49.6189 3.95757 50.0865 1 51.7504 1C53.4144 1 54.6569 16.6177 56.0753 17.3963C57.4938 18.1749 58.3253 15.5348 59.8905 15.7547C61.4557 15.9746 61.5535 22 63.2654 22C64.9774 22 64.9285 17.701 66.5426 17.701C68.1567 17.7009 69.2688 12.6911 70.4556 12.6911C71.6423 12.6911 71.9535 20.6366 74.286 20.6366C76.6185 20.6366 78.5 14.9252 78.5 14.9252C78.5 14.9252 80.5 8.04104 82.5 7.8504C84.5 7.65976 88.2594 19.8553 91 19.5", Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z" });
            MySuggestedStockCollection.Add(new Stock { StockName = "HDB", Company = "HDFC Bank.", CurrentClose = 63.15, CurrentChange = "+0.62", CurrentHigh = "+0.39", PreviousClose = 62.76, Rating = "Buy", StockVolume = "1385800", StockLogo = "/syncfusion.stockanalysisdemo.wpf;component/Assets/HDFC.png", Graph = "M1 5.69173C1 5.69173 3.49445 7.9476 5.84225 7.97808C8.19005 8.00856 9.31503 5.37964 12.3965 5.37964C15.478 5.37964 16.5052 9.67546 18.5106 9.67546C20.516 9.67546 21.3964 7.39134 23.7442 7.39134C26.092 7.39134 28.0485 13.3217 30.2006 13.3217C32.3528 13.3217 33.3396 8.69056 34.456 8.69056C35.5724 8.69056 34.7006 11.472 36.8527 11.2261C39.0049 10.9803 38.1245 13.4264 39.0049 13.4264C39.8853 13.4264 40.7168 10.9328 41.8907 10.9328C43.0646 10.9328 43.2249 12.0786 44.0918 12.0434C44.9586 12.0082 45.9504 9.75928 46.9776 9.75928C48.0048 9.75928 48.2493 10.7023 48.9341 11.4357C49.6189 12.1691 50.0865 14 51.7504 14C53.4144 14 54.6569 4.33188 56.0753 3.84991C57.4938 3.36794 58.3253 5.00226 59.8905 4.86614C61.4557 4.73003 61.5535 0.999999 63.2654 1C64.9774 1 64.9285 3.6613 66.5426 3.66131C68.1567 3.66132 69.2688 6.76268 70.4556 6.76268C71.6423 6.76268 71.9535 1.84399 74.286 1.84399C76.6185 1.84399 80.7761 9.67546 80.7761 9.67546C80.7761 9.67546 83.589 13.9188 84.8336 13.9922C86.0782 14.0657 88.2594 12.3139 91 12.5338", Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z" });
            MySuggestedStockCollection.Add(new Stock { StockName = "WIPRO", Company = "Wibro Ltd.", CurrentClose = 407.95, CurrentChange = "+0.11", CurrentHigh = "+0.45", PreviousClose = 407.50, Rating = "Strong Buy", StockVolume = "4238065", StockLogo = "/syncfusion.stockanalysisdemo.wpf;component/Assets/Wibro.png", Graph = "M1 9.30827C1 9.30827 3.49445 7.0524 5.84225 7.02191C8.19005 6.99143 9.31503 9.62036 12.3965 9.62036C15.478 9.62036 16.5052 5.32454 18.5106 5.32454C20.516 5.32454 21.3964 7.60866 23.7442 7.60866C26.092 7.60866 28.0485 1.67834 30.2006 1.67834C32.3528 1.67834 33.3396 6.30944 34.456 6.30944C35.5724 6.30944 34.7006 3.52798 36.8527 3.77386C39.0049 4.01973 38.1245 1.57356 39.0049 1.57356C39.8853 1.57356 40.7168 4.06723 41.8907 4.06723C43.0646 4.06723 43.2249 2.92137 44.0918 2.9566C44.9586 2.99183 45.9505 5.24072 46.9776 5.24072C48.0048 5.24072 48.2493 4.29774 48.9341 3.5643C49.6189 2.83087 50.0865 0.999998 51.7504 0.999998C53.4144 0.999998 54.6569 10.6681 56.0753 11.1501C57.4938 11.6321 58.3253 9.99774 59.8905 10.1339C61.4557 10.27 61.5535 14 63.2654 14C64.9774 14 64.9285 11.3387 66.5426 11.3387C68.1567 11.3387 69.2688 8.23732 70.4556 8.23732C71.6423 8.23732 71.9535 13.156 74.286 13.156C76.6185 13.156 80.7761 5.32454 80.7761 5.32454C80.7761 5.32454 83.589 1.08121 84.8336 1.00777C86.0782 0.934328 88.7594 12.7199 91.5 12.5", Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z" });
            MySuggestedStockCollection.Add(new Stock { StockName = "BEL", Company = "BEL Ltd.", CurrentClose = 134.05, CurrentChange = "+0.11", CurrentHigh = "+0.15", PreviousClose = 133.90, Rating = "Buy", StockVolume = "14954352", StockLogo = "/syncfusion.stockanalysisdemo.wpf;component/Assets/BEL.png", Graph = "M1 8.57895C1 8.57895 3.49445 12.2231 5.84225 12.2723C8.19005 12.3215 9.31503 8.0748 12.3965 8.0748C15.478 8.0748 16.5052 15.0142 18.5106 15.0142C20.516 15.0142 21.3964 11.3245 23.7442 11.3245C26.092 11.3245 28.0485 20.9042 30.2006 20.9042C32.3528 20.9042 33.3396 13.4232 34.456 13.4232C35.5724 13.4232 34.7006 17.9163 36.8527 17.5192C39.0049 17.122 38.1245 21.0735 39.0049 21.0735C39.8853 21.0735 40.7168 17.0452 41.8907 17.0452C43.0646 17.0452 43.2249 18.8962 44.0918 18.8393C44.9586 18.7824 45.9504 15.1496 46.9776 15.1496C48.0048 15.1496 48.2493 16.6729 48.9341 17.8577C49.6189 19.0424 50.0865 22 51.7504 22C53.4144 22 54.6569 6.38226 56.0753 5.6037C57.4938 4.82513 58.3253 7.46518 59.8905 7.24531C61.4557 7.02543 61.5535 0.999998 63.2654 1C64.9774 1 64.9285 5.29902 66.5426 5.29904C68.1567 5.29906 69.2688 10.3089 70.4556 10.3089C71.6423 10.3089 71.9535 2.36336 74.286 2.36336C76.6185 2.36336 80.7761 15.0142 80.7761 15.0142C80.7761 15.0142 83.589 21.8688 84.8336 21.9874C86.0782 22.1061 88.2594 19.2763 91 19.6316", Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z" });
        }

        public ObservableCollection<StockData> AddStockItemsSource(string name)
        {
            ObservableCollection<StockData> StockDetails = new ObservableCollection<StockData>();

            StockDetails = StockItemSource.Where(item => item != null && item.SelectedStock == name).OrderByDescending(item => item.Date).ToObservableCollection();
            int i = 0;

            foreach (var item in StockDetails)
            {
                item.Date = DateTime.Now.Date.AddDays(-i);
                if (item.Date.DayOfWeek == DayOfWeek.Monday)
                    i = i + 3;
                else
                    i++;
            }
            return StockDetails;
        }
        
        public void StartTimer()
        {
            if (!this.ListViewTimer.IsEnabled)
            {
                this.ListViewTimer.Start();
            }
        }

        public void StopTimer()
        {
            if (this.ListViewTimer.IsEnabled)
            {
                this.ListViewTimer.Stop();
            }
        }

        void ListViewTimer_Tick(object sender, object e)
        {
            if (DateTime.Now.Hour > 17)
                StopTimer();
            if (DateTime.Now.Hour > 17 || DateTime.Now.Hour < 8)
                return;
            double data = 0;
            double high;
            int record = r.Next(MySuggestedStockCollection.Count);  
            string sign;

            if (record == 0)
            {
                if (MySuggestedStockCollection[record].CurrentClose < 175)
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose + 0.521;
                else
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose - 0.512; 
            }
            else if (record == 1)
            {
                if (MySuggestedStockCollection[record].CurrentClose < 330)
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose + 0.478;
                else
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose - 0.399; 
            }
            else if (record == 2)
            {
                if (MySuggestedStockCollection[record].CurrentClose < 125)
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose + 0.421;
                else
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose - 0.51; 
            }
            else if (record == 3)
            {
                if (MySuggestedStockCollection[record].CurrentClose < 115)
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose + 0.521;
                else
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose - 0.398; 
            }
            else if (record == 4)
            {
                if (MySuggestedStockCollection[record].CurrentClose < 185)
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose + 0.489;
                else
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose - 0.459; 
            }
            else if (record == 5)
            {
                if (MySuggestedStockCollection[record].CurrentClose < 250)
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose + 0.5;
                else
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose - 0.576; 
            }
            else if (record == 6)
            {
                if (MySuggestedStockCollection[record].CurrentClose < 130)
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose + 0.554;
                else
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose - 0.563; 
            }
            else if (record == 7)
            {
                if (MySuggestedStockCollection[record].CurrentClose < 400)
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose + 0.456;
                else
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose - 0.399; 
            }
            else if (record == 8)
            {
                if (MySuggestedStockCollection[record].CurrentClose < 175)
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose + 0.532;
                else
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose - 0.513; 
            }
            else if (record == 9)
            {
                if (MySuggestedStockCollection[record].CurrentClose < 3400)
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose + 0.489;
                else
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose - 0.459;
            }
            else if (record == 10)
            {
                if (MySuggestedStockCollection[record].CurrentClose < 37)
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose + 0.5;
                else
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose - 0.576;
            }
            else if (record == 11)
            {
                if (MySuggestedStockCollection[record].CurrentClose < 66)
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose + 0.554;
                else
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose - 0.563;
            }
            else if (record == 12)
            {
                if (MySuggestedStockCollection[record].CurrentClose < 415)
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose + 0.456;
                else
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose - 0.399;
            }
            else if (record == 13)
            {
                if (MySuggestedStockCollection[record].CurrentClose < 135)
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose + 0.532;
                else
                    MySuggestedStockCollection[record].CurrentClose = MySuggestedStockCollection[record].CurrentClose - 0.513;
            }

            high = MySuggestedStockCollection[record].CurrentClose - MySuggestedStockCollection[record].PreviousClose;
            sign = high >= 0 ? "+" : "-";
            MySuggestedStockCollection[record].CurrentHigh = sign + Math.Abs(high).ToString("0.##"); 
            MySuggestedStockCollection[record].CurrentChange = sign + Math.Abs((Double.Parse(MySuggestedStockCollection[record].CurrentHigh) / MySuggestedStockCollection[record].PreviousClose) * 100).ToString("0.##");
             
            if (record == ListViewIndex && NeedToUpdate)
            {
                var time = StockCollection[StockCollection.Count - 1].Date;
                StockCollection.RemoveAt(StockCollection.Count-1);
                data = MySuggestedStockCollection[ListViewIndex].CurrentClose; 
                this.StockCollection.Add(new StockData(MySuggestedStockCollection[ListViewIndex].StockName, time, data, data + r.NextDouble() * 4, data - r.NextDouble() * 2, data + r.NextDouble() * 2, 2110498000));
            }

            if (-1.0 <= Double.Parse(MySuggestedStockCollection[record].CurrentHigh) && Double.Parse(MySuggestedStockCollection[record].CurrentHigh) < -0.5)
                MySuggestedStockCollection[record].Rating = "Strong Sell";
            else if (-0.5 >= Double.Parse(MySuggestedStockCollection[record].CurrentHigh) && Double.Parse(MySuggestedStockCollection[record].CurrentHigh) < -0.1)
                MySuggestedStockCollection[record].Rating = "Sell";
            else if (-0.1 >= Double.Parse(MySuggestedStockCollection[record].CurrentHigh) && Double.Parse(MySuggestedStockCollection[record].CurrentHigh) <= 0.1)
                MySuggestedStockCollection[record].Rating = "Neutral";
            else if (1.0 >= Double.Parse(MySuggestedStockCollection[record].CurrentHigh) && Double.Parse(MySuggestedStockCollection[record].CurrentHigh) <= 0.5)
                MySuggestedStockCollection[record].Rating = "Buy";
            else if (0.5 > Double.Parse(MySuggestedStockCollection[record].CurrentHigh) && Double.Parse(MySuggestedStockCollection[record].CurrentHigh) >= 1.0)
                MySuggestedStockCollection[record].Rating = "Strong Buy";
        }
         
        public void AddChartItemsSource()
        {
            this.AAPL = new ObservableCollection<StockData>();
            this.AAPL.Add(new StockData("AAPL", date.AddHours(8), 173.320007, 175.770004, 173.110001, 175.429993, 54794100));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(8.1), 172.410004, 173.899994, 171.690002, 172.990005, 56058300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(8.2), 171.089996, 172.419998, 170.520004, 171.839996, 45143500));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(8.3), 173.130005, 173.380005, 171.279999, 171.559998, 50747300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(8.4), 173.979996, 174.710007, 173.449997, 174.199997, 43570900));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(8.5), 176.389999, 176.389999, 174.940002, 175.160004, 55772400));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(8.6), 173, 175.240005, 172.580002, 175.050003, 65496700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(8.7), 171.710007, 172.929993, 170.419998, 172.690002, 57951600));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(8.8), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(8.9), 173.160004, 173.210007, 171.470001, 172.070007, 37266700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(9), 173.619995, 174.059998, 171, 172.570007, 45497800));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(9.1), 173.850006, 174.589996, 172.169998, 173.75, 49514700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(9.2), 173.020004, 174.029999, 171.899994, 173.559998, 53724500));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(9.3), 173.050003, 173.539993, 171.600006, 171.770004, 45326900));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(9.4), 170.979996, 174.300003, 170.759995, 173.570007, 113316400));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(9.5), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(9.6), 172.410004, 173.899994, 171.690002, 172.990005, 56058300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(9.7), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(9.8), 171.710007, 172.929993, 170.419998, 172.690002, 57951600));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(9.9), 173, 175.240005, 172.580002, 175.050003, 65496700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(10), 176.389999, 176.389999, 174.940002, 175.160004, 55772400));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(10.1), 173.979996, 174.710007, 173.449997, 174.199997, 43570900));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(10.2), 173.130005, 173.380005, 171.279999, 171.559998, 50747300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(10.3), 171.089996, 172.419998, 170.520004, 171.839996, 45143500));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(10.4), 172.410004, 173.899994, 171.690002, 172.990005, 56058300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(10.5), 173.320007, 175.770004, 173.110001, 175.429993, 54794100));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(10.6), 171.710007, 172.929993, 170.419998, 172.690002, 57951600));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(10.7), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(10.8), 173.160004, 173.210007, 171.470001, 172.070007, 37266700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(10.9), 173.619995, 174.059998, 171, 172.570007, 45497800));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(11), 173.850006, 174.589996, 172.169998, 173.75, 49514700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(11.1), 173.020004, 174.029999, 171.899994, 173.559998, 53724500));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(11.2), 173.050003, 173.539993, 171.600006, 171.770004, 45326900));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(11.3), 170.979996, 174.300003, 170.759995, 173.570007, 113316400));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(11.4), 173.320007, 175.770004, 173.110001, 175.429993, 54794100));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(11.5), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(11.6), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(11.7), 171.710007, 172.929993, 170.419998, 172.690002, 57951600));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(11.8), 173.160004, 173.210007, 171.470001, 172.070007, 37266700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(11.9), 173.850006, 174.589996, 172.169998, 173.75, 49514700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(12), 173.320007, 175.770004, 173.110001, 175.429993, 54794100));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(12.1), 172.410004, 173.899994, 171.690002, 172.990005, 56058300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(12.2), 171.089996, 172.419998, 170.520004, 171.839996, 45143500));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(12.3), 173.130005, 173.380005, 171.279999, 171.559998, 50747300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(12.4), 173.979996, 174.710007, 173.449997, 174.199997, 43570900));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(12.5), 176.389999, 176.389999, 174.940002, 175.160004, 55772400));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(12.6), 173, 175.240005, 172.580002, 175.050003, 65496700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(12.7), 171.710007, 172.929993, 170.419998, 172.690002, 57951600));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(12.8), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(12.9), 173.160004, 173.210007, 171.470001, 172.070007, 37266700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(13), 173.619995, 174.059998, 171, 172.570007, 45497800));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(13.1), 173.850006, 174.589996, 172.169998, 173.75, 49514700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(13.2), 173.020004, 174.029999, 171.899994, 173.559998, 53724500));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(13.3), 173.050003, 173.539993, 171.600006, 171.770004, 45326900));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(13.4), 170.979996, 174.300003, 170.759995, 173.570007, 113316400));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(13.5), 170.089996, 174.350006, 177.539993, 176.539993, 48425700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(13.6), 173.320007, 175.770004, 173.110001, 175.429993, 54794100));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(13.7), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(13.8), 171.710007, 172.929993, 170.419998, 172.690002, 57951600));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(13.9), 173, 175.240005, 172.580002, 175.050003, 65496700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(14), 176.389999, 176.389999, 174.940002, 175.160004, 55772400));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(14.1), 173.979996, 174.710007, 173.449997, 174.199997, 43570900));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(14.2), 173.130005, 173.380005, 171.279999, 171.559998, 50747300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(14.3), 171.089996, 172.419998, 170.520004, 171.839996, 45143500));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(14.4), 172.410004, 173.899994, 171.690002, 172.990005, 56058300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(14.5), 173.320007, 175.770004, 173.110001, 175.429993, 54794100));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(14.6), 171.710007, 172.929993, 170.419998, 172.690002, 57951600));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(14.7), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(14.8), 173.160004, 173.210007, 171.470001, 172.070007, 37266700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(14.9), 173.619995, 174.059998, 171, 172.570007, 45497800));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(15), 173.850006, 174.589996, 172.169998, 173.75, 49514700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(15.1), 173.020004, 174.029999, 171.899994, 173.559998, 53724500));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(15.2), 173.050003, 173.539993, 171.600006, 171.770004, 45326900));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(15.3), 170.979996, 174.300003, 170.759995, 173.570007, 113316400));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(15.4), 170.089996, 174.350006, 177.539993, 176.539993, 48425700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(15.5), 173.020004, 174.029999, 171.899994, 173.559998, 53724500));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(15.6), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(15.7), 171.710007, 172.929993, 170.419998, 172.690002, 57951600));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(15.8), 173.160004, 173.210007, 171.470001, 172.070007, 37266700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(15.9), 173.850006, 174.589996, 172.169998, 173.75, 49514700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(16), 173.619995, 174.059998, 171, 172.570007, 45497800));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(16.1), 173.850006, 174.589996, 172.169998, 173.75, 49514700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(16.2), 173.020004, 174.029999, 171.899994, 173.559998, 53724500));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(16.3), 173.050003, 173.539993, 171.600006, 171.770004, 45326900));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(16.4), 170.979996, 174.300003, 170.759995, 173.570007, 113316400));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(16.5), 170.089996, 170.350006, 175.539993, 174.539993, 48425700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(16.6), 173.320007, 175.770004, 173.110001, 175.429993, 54794100));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(16.7), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(16.8), 171.710007, 172.929993, 170.419998, 172.690002, 57951600));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(16.9), 173, 175.240005, 172.580002, 175.050003, 65496700));
            this.AAPL.Add(new StockData("AAPL", date.AddHours(17), 173.320007, 175.770004, 173.110001, 175.429993, 54794100));
            AAPL = AAPL.Where(item => item != null && (item.Date.Hour < Today.Hour || (item.Date.Hour == Today.Hour && item.Date.Minute <= Today.Minute))).ToObservableCollection();

            this.MSFT = new ObservableCollection<StockData>();
            this.MSFT.Add(new StockData("MSFT", date.AddHours(8), 324.019989, 333.399994, 323.880005, 332.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(8.1), 323.23999, 326.899994, 320, 325.920013, 43301700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(8.2), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(8.3), 320.029999, 322.720001, 315.25, 315.26001, 30797200));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(8.4), 318.600006, 322.589996, 318.01001, 321.179993, 24115700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(8.5), 323.23999, 326.899994, 320, 325.920013, 43301700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(8.6), 326.019989, 333.399994, 323.880005, 332.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(8.7), 320.029999, 322.720001, 315.25, 315.26001, 30797200));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(8.8), 318.600006, 322.589996, 318.01001, 321.179993, 24115700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(8.9), 316.73999, 318.75, 316.369995, 318.339996, 27529500));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(9), 323.23999, 326.899994, 320, 325.920013, 43301700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(9.1), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(9.2), 320.029999, 322.720001, 315.25, 315.26001, 30797200));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(9.3), 316.73999, 318.75, 316.369995, 318.339996, 27529500));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(9.4), 320.019989, 333.399994, 323.880005, 332.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(9.5), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(9.6), 318.600006, 322.589996, 318.01001, 321.179993, 24115700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(9.7), 323.23999, 326.899994, 320, 325.920013, 43301700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(9.8), 322.019989, 333.399994, 323.880005, 332.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(9.9), 320.029999, 322.720001, 315.25, 315.26001, 30797200));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(10), 318.600006, 322.589996, 318.01001, 321.179993, 24115700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(10.1), 316.73999, 318.75, 316.369995, 318.339996, 27529500));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(10.2), 323.23999, 326.899994, 320, 325.920013, 43301700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(10.3), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(10.4), 320.029999, 322.720001, 315.25, 315.26001, 30797200));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(10.5), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(10.6), 318.600006, 322.589996, 318.01001, 321.179993, 24115700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(10.7), 316.73999, 318.75, 316.369995, 318.339996, 27529500));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(10.8), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(10.9), 314.529999, 319.040009, 313.720001, 318.519989, 27276000));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(11), 316.73999, 318.75, 316.369995, 318.339996, 27529500));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(11.1), 314.529999, 319.040009, 313.720001, 318.519989, 27276000)); 
            this.MSFT.Add(new StockData("MSFT", date.AddHours(11.2), 324.019989, 330.399994, 323.880005, 332.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(11.3), 323.23999, 326.899994, 320, 325.920013, 43301700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(11.4), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(11.5), 320.029999, 322.720001, 315.25, 315.26001, 30797200));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(11.6), 324.019989, 333.399994, 333.880005, 332.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(11.7), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(11.8), 318.600006, 322.589996, 318.01001, 321.179993, 24115700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(11.9), 323.23999, 326.899994, 320, 325.920013, 43301700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(12), 324.019989, 333.399994, 323.880005, 335.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(12.1), 320.029999, 322.720001, 315.25, 315.26001, 30797200));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(12.2), 318.600006, 322.589996, 318.01001, 321.179993, 24115700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(12.3), 316.73999, 318.75, 316.369995, 318.339996, 27529500));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(12.4), 323.23999, 326.899994, 320, 325.920013, 43301700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(12.5), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(12.6), 320.029999, 322.720001, 315.25, 315.26001, 30797200));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(12.7), 316.73999, 318.75, 316.369995, 318.339996, 27529500));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(12.8), 318.600006, 322.589996, 318.01001, 321.179993, 24115700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(12.9), 316.73999, 318.75, 316.369995, 318.339996, 27529500));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(13), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(13.1), 314.529999, 319.040009, 313.720001, 318.519989, 27276000));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(13.2), 316.73999, 318.75, 316.369995, 318.339996, 27529500));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(13.3), 314.529999, 319.040009, 313.720001, 318.519989, 27276000)); 
            this.MSFT.Add(new StockData("MSFT", date.AddHours(13.4), 324.019989, 333.399994, 323.880005, 332.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(13.5), 323.23999, 326.899994, 320, 325.920013, 43301700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(13.6), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(13.7), 320.029999, 322.720001, 315.25, 315.26001, 30797200));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(13.8), 334.019989, 333.399994, 323.880005, 332.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(13.9), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(14), 318.600006, 322.589996, 318.01001, 321.179993, 24115700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(14.1), 323.23999, 326.899994, 320, 325.920013, 43301700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(14.2), 316.73999, 318.75, 316.369995, 318.339996, 27529500));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(14.3), 318.600006, 322.589996, 318.01001, 321.179993, 24115700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(14.4), 316.73999, 318.75, 316.369995, 318.339996, 27529500));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(14.5), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(14.6), 314.529999, 319.040009, 313.720001, 318.519989, 27276000));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(14.7), 316.73999, 318.75, 316.369995, 318.339996, 27529500));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(14.8), 314.529999, 319.040009, 313.720001, 318.519989, 27276000));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(14.9), 322.019989, 333.399994, 333.880005, 332.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(15), 323.23999, 326.899994, 320, 325.920013, 43301700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(15.1), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(15.2), 320.029999, 322.720001, 315.25, 315.26001, 30797200));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(15.3), 324.019989, 333.399994, 323.880005, 332.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(15.4), 329.019989, 333.399994, 323.880005, 332.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(15.5), 320.029999, 322.720001, 315.25, 315.26001, 30797200));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(15.6), 318.600006, 322.589996, 318.01001, 321.179993, 24115700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(15.7), 324.019989, 333.399994, 323.880005, 332.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(15.8), 323.23999, 326.899994, 320, 325.920013, 43301700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(15.9), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(16), 320.029999, 322.720001, 315.25, 315.26001, 30797200));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(16.1), 329.019989, 333.399994, 323.880005, 332.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(16.2), 314.730011, 316.5, 312.609985, 313.850006, 23384900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(16.3), 318.600006, 322.589996, 318.01001, 321.179993, 24115700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(16.4), 323.23999, 326.899994, 320, 325.920013, 43301700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(16.5), 324.019989, 337.399994, 323.880005, 332.890015, 36600900));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(16.6), 320.029999, 322.720001, 315.25, 315.26001, 30797200));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(16.7), 318.600006, 322.589996, 318.01001, 321.179993, 24115700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(16.8), 316.73999, 318.75, 316.369995, 318.339996, 27529500));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(16.9), 323.23999, 326.899994, 320, 325.920013, 43301700));
            this.MSFT.Add(new StockData("MSFT", date.AddHours(17), 314.730011, 316.5, 312.609985, 313.850006, 23384900)); 
            MSFT = MSFT.Where(item => item != null && (item.Date.Hour < Today.Hour || (item.Date.Hour == Today.Hour && item.Date.Minute <= Today.Minute))).ToObservableCollection();
             
            this.GOOG = new ObservableCollection<StockData>();
            this.GOOG.Add(new StockData("GOOG", date.AddHours(8), 123.399002, 120.491997, 122.67675, 126.360497, 41012000));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(8.1), 126.033501, 126.478996, 123.376503, 124.970001, 38546000));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(8.2), 124.065002, 126, 123.290001, 125.43, 25154700)); 
            this.GOOG.Add(new StockData("GOOG", date.AddHours(8.3), 124.199997, 126.478996, 122.720001, 123.25, 30251300));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(8.4), 121.559998, 123.900002, 121.489998, 123.519997, 27014500));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(8.5), 124.065002, 126, 123.290001, 125.43, 25154700));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(8.6), 125.209999, 125.980003, 122.900002, 124.349998, 33812700));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(8.7), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(8.8), 124.93, 125.419998, 123.050003, 123.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(8.9), 123.510002, 127.050003, 123.449997, 125.870003, 29760200));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(9), 124.199997, 126.478996, 122.720001, 123.25, 30251300));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(9.1), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(9.2), 123.510002, 127.050003, 123.449997, 125.870003, 29760200));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(9.3), 124.199997, 126.478996, 122.720001, 123.25, 30251300));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(9.4), 121.559998, 123.900002, 121.489998, 123.519997, 27014500));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(9.5), 120.18, 122.279999, 119.459999, 121.480003, 26659600));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(9.6), 121.559998, 123.900002, 121.489998, 123.519997, 27014500));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(9.7), 124.93, 125.419998, 123.050003, 123.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(9.8), 120.18, 122.279999, 119.459999, 121.480003, 26659600));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(9.9), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(10), 124.93, 125.419998, 123.050003, 123.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(10.1), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(10.2), 126.93, 124.419998, 123.050003, 127.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(10.3), 120.18, 122.279999, 119.459999, 121.480003, 26659600));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(10.4), 121.559998, 123.900002, 121.489998, 123.519997, 27014500));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(10.5), 124.199997, 126.478996, 122.720001, 123.25, 30251300));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(10.6), 123.510002, 127.050003, 123.449997, 125.870003, 29760200));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(10.7), 124.93, 125.419998, 123.050003, 123.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(10.8), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(10.9), 125.209999, 125.980003, 122.900002, 124.349998, 33812700));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(11), 124.065002, 126, 123.290001, 125.43, 25154700));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(11.1), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(11.2), 123.510002, 127.050003, 123.449997, 125.870003, 29760200));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(11.3), 124.199997, 126.478996, 122.720001, 123.25, 30251300));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(11.4), 121.559998, 123.900002, 121.489998, 123.519997, 27014500));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(11.5), 124.065002, 126, 123.290001, 125.43, 25154700));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(11.6), 125.209999, 125.980003, 122.900002, 124.349998, 33812700));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(11.7), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(11.8), 124.93, 125.419998, 123.050003, 123.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(11.9), 123.510002, 127.050003, 123.449997, 125.870003, 29760200));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(12), 124.199997, 126.478996, 122.720001, 123.25, 30251300));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(12.1), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(12.2), 123.510002, 127.050003, 123.449997, 125.870003, 29760200));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(12.3), 124.199997, 126.478996, 122.720001, 123.25, 30251300));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(12.4), 121.559998, 123.900002, 121.489998, 123.519997, 27014500));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(12.5), 120.18, 122.279999, 119.459999, 121.480003, 26659600));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(12.6), 121.559998, 123.900002, 121.489998, 123.519997, 27014500));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(12.7), 124.93, 125.419998, 123.050003, 123.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(12.8), 120.18, 122.279999, 119.459999, 121.480003, 26659600));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(12.9), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(13), 124.93, 125.419998, 123.050003, 123.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(13.1), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(13.2), 126.93, 124.419998, 123.050003, 127.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(13.3), 120.18, 122.279999, 119.459999, 121.480003, 26659600));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(13.4), 121.559998, 123.900002, 121.489998, 123.519997, 27014500));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(13.5), 124.199997, 126.478996, 122.720001, 123.25, 30251300));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(13.6), 123.510002, 127.050003, 123.449997, 125.870003, 29760200));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(13.7), 124.93, 125.419998, 123.050003, 123.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(13.8), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(13.9), 125.209999, 125.980003, 122.900002, 124.349998, 33812700));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(14), 124.065002, 126, 123.290001, 125.43, 25154700));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(14.1), 126.033501, 126.478996, 123.376503, 124.970001, 38546000)); 
            this.GOOG.Add(new StockData("GOOG", date.AddHours(14.2), 123.510002, 127.050003, 123.449997, 125.870003, 29760200));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(14.3), 124.199997, 126.478996, 122.720001, 123.25, 30251300));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(14.4), 121.559998, 123.900002, 121.489998, 123.519997, 27014500));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(14.5), 124.065002, 126, 123.290001, 125.43, 25154700));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(14.6), 125.209999, 125.980003, 122.900002, 124.349998, 33812700));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(14.7), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(14.8), 124.93, 125.419998, 123.050003, 123.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(14.9), 123.510002, 127.050003, 123.449997, 125.870003, 29760200));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(15), 124.199997, 126.478996, 122.720001, 123.25, 30251300));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(15.1), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(15.2), 123.510002, 127.050003, 123.449997, 125.870003, 29760200));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(15.3), 124.199997, 126.478996, 122.720001, 123.25, 30251300));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(15.4), 121.559998, 123.900002, 121.489998, 123.519997, 27014500));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(15.5), 120.18, 122.279999, 119.459999, 121.480003, 26659600));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(15.6), 121.559998, 123.900002, 121.489998, 123.519997, 27014500));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(15.7), 124.93, 125.419998, 123.050003, 123.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(15.8), 120.18, 122.279999, 119.459999, 121.480003, 26659600));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(15.9), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(16), 124.93, 125.419998, 123.050003, 123.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(16.1), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(16.2), 126.93, 124.419998, 123.050003, 127.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(16.3), 120.18, 122.279999, 119.459999, 121.480003, 26659600));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(16.4), 121.559998, 123.900002, 121.489998, 123.519997, 27014500));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(16.5), 124.199997, 126.478996, 122.720001, 123.25, 30251300));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(16.6), 123.510002, 127.050003, 123.449997, 125.870003, 29760200));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(16.7), 124.93, 125.419998, 123.050003, 123.290001, 24477900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(16.8), 121.879997, 122.75, 120.75, 121.639999, 23087900));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(16.9), 125.209999, 125.980003, 122.900002, 124.349998, 33812700));
            this.GOOG.Add(new StockData("GOOG", date.AddHours(17), 124.065002, 126, 123.290001, 125.43, 25154700));
            GOOG = GOOG.Where(item => item != null && (item.Date.Hour < Today.Hour || (item.Date.Hour == Today.Hour && item.Date.Minute <= Today.Minute))).ToObservableCollection();

            this.AMZN = new ObservableCollection<StockData>();
            this.AMZN.Add(new StockData("AMZN", date.AddHours(8), 116.040001, 121.5, 116.019997, 120.110001, 73510000));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(8.1), 116.629997, 116.870003, 114.309998, 115, 66496700));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(8.2), 115.349998, 117.339996, 115.019997, 116.75, 63487900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(8.3), 114.269997, 117.139999, 113.779999, 114.989998, 67576300));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(8.4), 116.769997, 116.769997, 114.25, 115.010002, 70741100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(8.5), 118.160004, 118.309998, 115.699997, 116.25, 54990200));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(8.6), 116.690002, 118.599998, 116.339996, 118.150002, 73174100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(8.7), 114.889999, 115.830002, 114.220001, 115.5, 65655200));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(8.8), 111.050003, 114.790001, 111.050003, 113.400002, 71472900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(8.9), 111.150002, 112.290001, 109.25, 111.199997, 53011100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(9), 116.629997, 116.870003, 114.309998, 115, 66496700));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(9.1), 112.160004, 112.639999, 109.32, 110.260002, 49810100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(9.2), 115.349998, 117.339996, 115.019997, 116.75, 63487900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(9.3), 111.029999, 113.279999, 110.489998, 112.18, 74924800));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(9.4), 116.690002, 118.599998, 116.339996, 118.150002, 73174100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(9.5), 118.160004, 118.309998, 115.699997, 116.25, 54990200));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(9.6), 116.769997, 116.769997, 114.25, 115.010002, 70741100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(9.7), 114.269997, 117.139999, 113.779999, 114.989998, 67576300));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(9.8), 115.349998, 117.339996, 115.019997, 116.75, 63487900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(9.9), 116.629997, 116.870003, 114.309998, 115, 66496700));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(10), 116.040001, 121.5, 116.019997, 120.110001, 73510000));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(10.1), 116.629997, 116.870003, 114.309998, 115, 66496700));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(10.2), 115.349998, 117.339996, 115.019997, 116.75, 63487900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(10.3), 114.269997, 117.139999, 113.779999, 114.989998, 67576300));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(10.4), 116.769997, 116.769997, 114.25, 115.010002, 70741100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(10.5), 118.160004, 118.309998, 115.699997, 116.25, 54990200));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(10.6), 116.690002, 118.599998, 116.339996, 118.150002, 73174100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(10.7), 114.889999, 115.830002, 114.220001, 115.5, 65655200));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(10.8), 111.050003, 114.790001, 111.050003, 113.400002, 71472900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(10.9), 111.150002, 112.290001, 109.25, 111.199997, 53011100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(11), 116.629997, 116.870003, 114.309998, 115, 66496700));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(11.1), 112.160004, 112.639999, 109.32, 110.260002, 49810100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(11.2), 115.349998, 117.339996, 115.019997, 116.75, 63487900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(11.3), 111.029999, 113.279999, 110.489998, 112.18, 74924800));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(11.4), 116.690002, 118.599998, 116.339996, 118.150002, 73174100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(11.5), 118.160004, 118.309998, 115.699997, 116.25, 54990200));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(11.6), 116.769997, 116.769997, 114.25, 115.010002, 70741100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(11.7), 114.269997, 117.139999, 113.779999, 114.989998, 67576300));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(11.8), 115.349998, 117.339996, 115.019997, 116.75, 63487900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(11.9), 116.629997, 116.870003, 114.309998, 115, 66496700));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(12), 116.040001, 121.5, 116.019997, 120.110001, 73510000));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(12.1), 116.629997, 116.870003, 114.309998, 115, 66496700));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(12.2), 115.349998, 117.339996, 115.019997, 116.75, 63487900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(12.3), 114.269997, 117.139999, 113.779999, 114.989998, 67576300));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(12.4), 116.769997, 116.769997, 114.25, 115.010002, 70741100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(12.5), 118.160004, 118.309998, 115.699997, 116.25, 54990200));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(12.6), 116.690002, 118.599998, 116.339996, 118.150002, 73174100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(12.7), 114.889999, 115.830002, 114.220001, 115.5, 65655200));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(12.8), 111.050003, 114.790001, 111.050003, 113.400002, 71472900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(12.9), 111.150002, 112.290001, 109.25, 111.199997, 53011100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(13), 116.629997, 116.870003, 114.309998, 115, 66496700));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(13.1), 112.160004, 112.639999, 109.32, 110.260002, 49810100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(13.2), 115.349998, 117.339996, 115.019997, 116.75, 63487900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(13.3), 111.029999, 113.279999, 110.489998, 112.18, 74924800));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(13.4), 116.690002, 118.599998, 116.339996, 118.150002, 73174100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(13.5), 118.160004, 118.309998, 115.699997, 116.25, 54990200));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(13.6), 116.769997, 116.769997, 114.25, 115.010002, 70741100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(13.7), 114.269997, 117.139999, 113.779999, 114.989998, 67576300));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(13.8), 115.349998, 117.339996, 115.019997, 116.75, 63487900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(13.9), 116.629997, 116.870003, 114.309998, 115, 66496700));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(14), 116.040001, 121.5, 116.019997, 120.110001, 73510000));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(14.1), 116.629997, 116.870003, 114.309998, 115, 66496700));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(14.2), 115.349998, 117.339996, 115.019997, 116.75, 63487900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(14.3), 114.269997, 117.139999, 113.779999, 114.989998, 67576300));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(14.4), 116.769997, 116.769997, 114.25, 115.010002, 70741100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(14.5), 118.160004, 118.309998, 115.699997, 116.25, 54990200));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(14.6), 116.690002, 118.599998, 116.339996, 118.150002, 73174100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(14.7), 114.889999, 115.830002, 114.220001, 115.5, 65655200));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(14.8), 111.050003, 114.790001, 111.050003, 113.400002, 71472900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(14.9), 111.150002, 112.290001, 109.25, 111.199997, 53011100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(15), 116.629997, 116.870003, 114.309998, 115, 66496700));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(15.1), 112.160004, 112.639999, 109.32, 110.260002, 49810100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(15.2), 115.349998, 117.339996, 115.019997, 116.75, 63487900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(15.3), 111.029999, 113.279999, 110.489998, 112.18, 74924800));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(15.4), 116.690002, 118.599998, 116.339996, 118.150002, 73174100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(15.5), 118.160004, 118.309998, 115.699997, 116.25, 54990200));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(15.6), 116.769997, 116.769997, 114.25, 115.010002, 70741100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(15.7), 114.269997, 117.139999, 113.779999, 114.989998, 67576300));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(15.8), 115.349998, 117.339996, 115.019997, 116.75, 63487900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(15.9), 116.629997, 116.870003, 114.309998, 115, 66496700));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(16), 114.889999, 115.830002, 114.220001, 115.5, 65655200));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(16.1), 111.050003, 114.790001, 111.050003, 113.400002, 71472900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(16.2), 111.150002, 112.290001, 109.25, 111.199997, 53011100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(16.3), 112.160004, 112.639999, 109.32, 110.260002, 49810100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(16.4), 111.029999, 113.279999, 110.489998, 112.18, 74924800)); 
            this.AMZN.Add(new StockData("AMZN", date.AddHours(16.5), 118.160004, 118.309998, 115.699997, 116.25, 54990200));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(16.6), 116.769997, 116.769997, 114.25, 115.010002, 70741100));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(16.7), 114.269997, 117.139999, 113.779999, 114.989998, 67576300));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(16.8), 115.349998, 117.339996, 115.019997, 116.75, 63487900));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(16.9), 116.629997, 116.870003, 114.309998, 115, 66496700));
            this.AMZN.Add(new StockData("AMZN", date.AddHours(17), 116.040001, 121.5, 116.019997, 120.110001, 73510000));
            AMZN = AMZN.Where(item => item != null && (item.Date.Hour < Today.Hour || (item.Date.Hour == Today.Hour && item.Date.Minute <= Today.Minute))).ToObservableCollection();

            this.TSLA = new ObservableCollection<StockData>();
            this.TSLA.Add(new StockData("TSLA", date.AddHours(8), 184.619995, 198.600006, 184.529999, 193.169998, 161765900));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(8.1), 186.539993, 186.779999, 180.580002, 184.470001, 96870700));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(8.2), 182.229996, 184.220001, 178.220001, 182.899994, 137605100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(8.3), 186.539993, 186.779999, 180.580002, 184.470001, 96870700));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(8.4), 182.229996, 184.220001, 178.220001, 182.899994, 137605100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(8.5), 180.699997, 189.320007, 180.110001, 188.869995, 132001400));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(8.6), 177.169998, 181.949997, 176.309998, 180.139999, 136024200));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(8.7), 171.82, 174.245998, 181.6, 173.666668, 343428000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(8.8), 174.782667, 183.641333, 189.633333, 180.582666, 106131000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(8.9), 186.436001, 185.483334, 182.133333, 182.242001, 153991500));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(9), 184.004667, 184.318666, 181.99, 182.337999, 281397000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(9.1), 186.199997, 192.960007, 185.259995, 185.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(9.2), 188.906668, 189.466667, 187.366667, 188.952667, 246817500));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(9.3), 183.436001, 183.483334, 182.133333, 182.242001, 153991500));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(9.4), 186.539993, 186.779999, 180.580002, 184.470001, 96870700));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(9.5), 182.229996, 184.220001, 178.220001, 182.899994, 137605100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(9.6), 182.229996, 184.220001, 178.220001, 182.899994, 137605100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(9.7), 189.782667, 190.641333, 199.633333, 190.582666, 106131000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(9.8), 186.199997, 192.960007, 185.259995, 185.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(9.9), 183.436001, 183.483334, 182.133333, 182.242001, 153991500));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(10), 177.169998, 181.949997, 176.309998, 180.139999, 136024200));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(10.1), 180.699997, 189.320007, 180.110001, 188.869995, 132001400));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(10.2), 190.587334, 181.649332, 180.566668, 181.512667, 104943000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(10.3), 191.82, 194.245998, 191.6, 193.666668, 343428000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(10.4), 191.82, 194.245998, 191.6, 193.666668, 343428000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(10.5), 196.492668, 197.333332, 194.150002, 195.210667, 260710500));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(10.6), 184.199997, 182.960007, 185.259995, 187.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(10.7), 186.199997, 192.960007, 185.259995, 185.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(10.8), 186.539993, 186.779999, 180.580002, 184.470001, 96870700));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(10.9), 184.619995, 198.600006, 184.529999, 193.169998, 161765900)); 
            this.TSLA.Add(new StockData("TSLA", date.AddHours(11), 184.004667, 184.318666, 181.99, 182.337999, 281397000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(11.1), 186.199997, 192.960007, 185.259995, 185.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(11.2), 188.906668, 189.466667, 187.366667, 188.952667, 246817500));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(11.3), 183.436001, 183.483334, 182.133333, 182.242001, 153991500));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(11.4), 186.539993, 186.779999, 180.580002, 184.470001, 96870700));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(11.5), 182.229996, 184.220001, 178.220001, 182.899994, 137605100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(11.6), 182.229996, 184.220001, 178.220001, 182.899994, 137605100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(11.7), 189.782667, 190.641333, 189.633333, 190.582666, 106131000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(11.8), 186.199997, 192.960007, 185.259995, 185.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(11.9), 186.199997, 192.960007, 185.259995, 185.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(12), 177.169998, 181.949997, 176.309998, 180.139999, 136024200));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(12.1), 180.699997, 189.320007, 180.110001, 188.869995, 132001400));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(12.2), 190.587334, 181.649332, 180.566668, 181.512667, 104943000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(12.3), 191.82, 194.245998, 191.6, 193.666668, 343428000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(12.4), 191.82, 194.245998, 191.6, 193.666668, 343428000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(12.5), 196.492668, 197.333332, 194.150002, 195.210667, 260710500));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(12.6), 184.199997, 182.960007, 185.259995, 187.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(12.7), 186.199997, 192.960007, 185.259995, 185.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(12.8), 186.539993, 186.779999, 180.580002, 184.470001, 96870700));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(12.9), 184.619995, 198.600006, 184.529999, 193.169998, 161765900));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(13), 184.619995, 198.600006, 184.529999, 193.169998, 161765900));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(13.1), 186.539993, 186.779999, 180.580002, 184.470001, 96870700));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(13.2), 182.229996, 184.220001, 178.220001, 182.899994, 137605100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(13.3), 186.539993, 186.779999, 180.580002, 184.470001, 96870700));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(13.4), 182.229996, 184.220001, 178.220001, 182.899994, 137605100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(13.5), 180.699997, 189.320007, 180.110001, 188.869995, 132001400));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(13.6), 177.169998, 181.949997, 176.309998, 180.139999, 136024200));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(13.7), 171.82, 174.245998, 181.6, 173.666668, 343428000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(13.8), 179.782667, 180.641333, 189.633333, 180.582666, 106131000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(13.9), 183.436001, 183.483334, 182.133333, 182.242001, 153991500));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(14), 184.004667, 184.318666, 181.99, 182.337999, 281397000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(14.1), 186.199997, 192.960007, 185.259995, 185.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(14.2), 188.906668, 189.466667, 187.366667, 188.952667, 246817500));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(14.3), 183.436001, 183.483334, 182.133333, 182.242001, 153991500));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(14.4), 186.539993, 186.779999, 180.580002, 184.470001, 96870700));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(14.5), 182.229996, 184.220001, 178.220001, 182.899994, 137605100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(14.6), 182.229996, 184.220001, 178.220001, 182.899994, 137605100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(14.7), 189.782667, 190.641333, 199.633333, 190.582666, 106131000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(14.8), 186.199997, 192.960007, 185.259995, 185.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(14.9), 183.436001, 183.483334, 182.133333, 182.242001, 153991500));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(15), 177.169998, 181.949997, 176.309998, 180.139999, 136024200));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(15.1), 180.699997, 189.320007, 180.110001, 188.869995, 132001400));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(15.2), 190.587334, 181.649332, 180.566668, 181.512667, 104943000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(15.3), 191.82, 194.245998, 191.6, 193.666668, 343428000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(15.4), 191.82, 194.245998, 191.6, 193.666668, 343428000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(15.5), 196.492668, 197.333332, 194.150002, 195.210667, 260710500));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(15.6), 184.199997, 182.960007, 185.259995, 187.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(15.7), 186.199997, 192.960007, 185.259995, 185.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(15.8), 186.539993, 186.779999, 180.580002, 184.470001, 96870700));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(15.9), 184.619995, 198.600006, 184.529999, 193.169998, 161765900));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(16), 177.169998, 181.949997, 176.309998, 180.139999, 136024200));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(16.1), 180.699997, 189.320007, 180.110001, 188.869995, 132001400));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(16.2), 190.587334, 181.649332, 180.566668, 181.512667, 104943000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(16.3), 191.82, 194.245998, 191.6, 193.666668, 343428000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(16.4), 191.82, 194.245998, 191.6, 193.666668, 343428000));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(16.5), 196.492668, 197.333332, 194.150002, 195.210667, 260710500));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(16.6), 184.199997, 182.960007, 185.259995, 187.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(16.7), 186.199997, 192.960007, 185.259995, 185.770004, 156952100));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(16.8), 186.539993, 186.779999, 180.580002, 184.470001, 96870700));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(16.9), 184.619995, 198.600006, 184.529999, 193.169998, 161765900));
            this.TSLA.Add(new StockData("TSLA", date.AddHours(17), 184.619995, 198.600006, 184.529999, 193.169998, 161765900));
            TSLA = TSLA.Where(item => item != null && (item.Date.Hour < Today.Hour || (item.Date.Hour == Today.Hour && item.Date.Minute <= Today.Minute))).ToObservableCollection();

            this.META = new ObservableCollection<StockData>();
            this.META.Add(new StockData("META", date.AddHours(8), 252.929993, 262.309998, 252.710007, 262.040009, 25727200));
            this.META.Add(new StockData("META", date.AddHours(8.1), 253.399994, 255.619995, 249.169998, 252.690002, 22371400));
            this.META.Add(new StockData("META", date.AddHours(8.2), 245.279999, 249.589996, 244.949997, 249.210007, 17724300));
            this.META.Add(new StockData("META", date.AddHours(8.3), 246.809998, 251.610001, 246.649994, 246.740005, 17748100));
            this.META.Add(new StockData("META", date.AddHours(8.4), 245.410004, 253.570007, 245.119995, 248.320007, 27738500));
            this.META.Add(new StockData("META", date.AddHours(8.5), 247.470001, 248.690002, 243.410004, 245.639999, 21599800));
            this.META.Add(new StockData("META", date.AddHours(8.6), 241.300003, 247.089996, 241.190002, 246.850006, 22943300));
            this.META.Add(new StockData("META", date.AddHours(8.7), 238.449997, 243.839996, 238.139999, 242.490005, 21193100));
            this.META.Add(new StockData("META", date.AddHours(8.8), 235.789993, 239.639999, 235.520004, 238.820007, 18163800));
            this.META.Add(new StockData("META", date.AddHours(8.9), 236.919998, 240.259995, 235.330002, 238.860001, 20653200));
            this.META.Add(new StockData("META", date.AddHours(9), 236.740005, 236.960007, 231.449997, 233.809998, 16155300));
            this.META.Add(new StockData("META", date.AddHours(9.1), 247.470001, 248.690002, 243.410004, 245.639999, 21599800));
            this.META.Add(new StockData("META", date.AddHours(9.2), 253.399994, 255.619995, 249.169998, 252.690002, 22371400));
            this.META.Add(new StockData("META", date.AddHours(9.3), 245.279999, 249.589996, 244.949997, 249.210007, 17724300));
            this.META.Add(new StockData("META", date.AddHours(9.4), 246.809998, 251.610001, 246.649994, 246.740005, 17748100));
            this.META.Add(new StockData("META", date.AddHours(9.5), 245.410004, 253.570007, 245.119995, 248.320007, 27738500));
            this.META.Add(new StockData("META", date.AddHours(9.6), 241.300003, 247.089996, 241.190002, 246.850006, 22943300));
            this.META.Add(new StockData("META", date.AddHours(9.7), 233.050003, 238.210007, 232.300003, 235.789993, 20449000));
            this.META.Add(new StockData("META", date.AddHours(9.8), 236.169998, 236.75, 230.720001, 233.080002, 19119000));
            this.META.Add(new StockData("META", date.AddHours(9.9), 231.460007, 235.880005, 231.080002, 233.369995, 16865600));
            this.META.Add(new StockData("META", date.AddHours(10), 231.419998, 235.619995, 230.270004, 233.270004, 16400500));
            this.META.Add(new StockData("META", date.AddHours(10.1), 232.240005, 234.679993, 229.850006, 232.779999, 26978900));
            this.META.Add(new StockData("META", date.AddHours(10.2), 238.449997, 243.839996, 238.139999, 242.490005, 21193100));
            this.META.Add(new StockData("META", date.AddHours(10.3), 241.300003, 247.089996, 241.190002, 246.850006, 22943300));
            this.META.Add(new StockData("META", date.AddHours(10.4), 247.470001, 248.690002, 243.410004, 245.639999, 21599800));
            this.META.Add(new StockData("META", date.AddHours(10.5), 245.410004, 253.570007, 245.119995, 248.320007, 27738500));
            this.META.Add(new StockData("META", date.AddHours(10.6), 246.809998, 251.610001, 246.649994, 246.740005, 17748100));
            this.META.Add(new StockData("META", date.AddHours(10.7), 245.279999, 249.589996, 244.949997, 249.210007, 17724300));
            this.META.Add(new StockData("META", date.AddHours(10.8), 253.399994, 255.619995, 249.169998, 252.690002, 22371400));
            this.META.Add(new StockData("META", date.AddHours(10.9), 252.929993, 262.309998, 252.710007, 262.040009, 25727200));
            this.META.Add(new StockData("META", date.AddHours(11), 235.789993, 239.639999, 235.520004, 238.820007, 18163800));
            this.META.Add(new StockData("META", date.AddHours(11.1), 236.919998, 240.259995, 235.330002, 238.860001, 20653200));
            this.META.Add(new StockData("META", date.AddHours(11.2), 236.740005, 236.960007, 231.449997, 233.809998, 16155300));
            this.META.Add(new StockData("META", date.AddHours(11.3), 233.050003, 238.210007, 232.300003, 235.789993, 20449000));
            this.META.Add(new StockData("META", date.AddHours(11.4), 236.169998, 236.75, 230.720001, 233.080002, 19119000));
            this.META.Add(new StockData("META", date.AddHours(11.5), 231.460007, 235.880005, 231.080002, 233.369995, 16865600));
            this.META.Add(new StockData("META", date.AddHours(11.6), 231.419998, 235.619995, 230.270004, 233.270004, 16400500));
            this.META.Add(new StockData("META", date.AddHours(11.7), 232.240005, 234.679993, 229.850006, 232.779999, 26978900));
            this.META.Add(new StockData("META", date.AddHours(11.8), 252.929993, 262.309998, 252.710007, 262.040009, 25727200));
            this.META.Add(new StockData("META", date.AddHours(11.9), 253.399994, 255.619995, 249.169998, 252.690002, 22371400));
            this.META.Add(new StockData("META", date.AddHours(12), 245.279999, 249.589996, 244.949997, 249.210007, 17724300));
            this.META.Add(new StockData("META", date.AddHours(12.1), 246.809998, 251.610001, 246.649994, 246.740005, 17748100));
            this.META.Add(new StockData("META", date.AddHours(12.2), 245.410004, 253.570007, 245.119995, 248.320007, 27738500));
            this.META.Add(new StockData("META", date.AddHours(12.3), 247.470001, 248.690002, 243.410004, 245.639999, 21599800));
            this.META.Add(new StockData("META", date.AddHours(12.4), 241.300003, 247.089996, 241.190002, 246.850006, 22943300));
            this.META.Add(new StockData("META", date.AddHours(12.5), 238.449997, 243.839996, 238.139999, 242.490005, 21193100));
            this.META.Add(new StockData("META", date.AddHours(12.6), 235.789993, 239.639999, 235.520004, 238.820007, 18163800));
            this.META.Add(new StockData("META", date.AddHours(12.7), 236.919998, 240.259995, 235.330002, 238.860001, 20653200));
            this.META.Add(new StockData("META", date.AddHours(12.8), 236.740005, 236.960007, 231.449997, 233.809998, 16155300));
            this.META.Add(new StockData("META", date.AddHours(12.9), 247.470001, 248.690002, 243.410004, 245.639999, 21599800));
            this.META.Add(new StockData("META", date.AddHours(13), 253.399994, 255.619995, 249.169998, 252.690002, 22371400));
            this.META.Add(new StockData("META", date.AddHours(13.1), 245.279999, 249.589996, 244.949997, 249.210007, 17724300));
            this.META.Add(new StockData("META", date.AddHours(13.2), 246.809998, 251.610001, 246.649994, 246.740005, 17748100));
            this.META.Add(new StockData("META", date.AddHours(13.3), 245.410004, 253.570007, 245.119995, 248.320007, 27738500));
            this.META.Add(new StockData("META", date.AddHours(13.4), 241.300003, 247.089996, 241.190002, 246.850006, 22943300));
            this.META.Add(new StockData("META", date.AddHours(13.5), 233.050003, 238.210007, 232.300003, 235.789993, 20449000));
            this.META.Add(new StockData("META", date.AddHours(13.6), 236.169998, 236.75, 230.720001, 233.080002, 19119000));
            this.META.Add(new StockData("META", date.AddHours(13.7), 231.460007, 235.880005, 231.080002, 233.369995, 16865600));
            this.META.Add(new StockData("META", date.AddHours(13.8), 231.419998, 235.619995, 230.270004, 233.270004, 16400500));
            this.META.Add(new StockData("META", date.AddHours(13.8), 232.240005, 234.679993, 229.850006, 232.779999, 26978900));
            this.META.Add(new StockData("META", date.AddHours(14), 238.449997, 243.839996, 238.139999, 242.490005, 21193100));
            this.META.Add(new StockData("META", date.AddHours(14.1), 241.300003, 247.089996, 241.190002, 246.850006, 22943300));
            this.META.Add(new StockData("META", date.AddHours(14.2), 247.470001, 248.690002, 243.410004, 245.639999, 21599800));
            this.META.Add(new StockData("META", date.AddHours(14.3), 245.410004, 253.570007, 245.119995, 248.320007, 27738500));
            this.META.Add(new StockData("META", date.AddHours(14.4), 246.809998, 251.610001, 246.649994, 246.740005, 17748100));
            this.META.Add(new StockData("META", date.AddHours(14.5), 245.279999, 249.589996, 244.949997, 249.210007, 17724300));
            this.META.Add(new StockData("META", date.AddHours(14.6), 253.399994, 255.619995, 249.169998, 252.690002, 22371400));
            this.META.Add(new StockData("META", date.AddHours(14.7), 252.929993, 262.309998, 252.710007, 262.040009, 25727200));
            this.META.Add(new StockData("META", date.AddHours(14.8), 235.789993, 239.639999, 235.520004, 238.820007, 18163800));
            this.META.Add(new StockData("META", date.AddHours(14.9), 236.919998, 240.259995, 235.330002, 238.860001, 20653200));
            this.META.Add(new StockData("META", date.AddHours(15), 236.740005, 236.960007, 231.449997, 233.809998, 16155300));
            this.META.Add(new StockData("META", date.AddHours(15.1), 233.050003, 238.210007, 232.300003, 235.789993, 20449000));
            this.META.Add(new StockData("META", date.AddHours(15.2), 236.169998, 236.75, 230.720001, 233.080002, 19119000));
            this.META.Add(new StockData("META", date.AddHours(15.3), 231.460007, 235.880005, 231.080002, 233.369995, 16865600));
            this.META.Add(new StockData("META", date.AddHours(15.4), 231.419998, 235.619995, 230.270004, 233.270004, 16400500));
            this.META.Add(new StockData("META", date.AddHours(15.5), 232.240005, 234.679993, 229.850006, 232.779999, 26978900));
            this.META.Add(new StockData("META", date.AddHours(15.6), 252.929993, 262.309998, 252.710007, 262.040009, 25727200));
            this.META.Add(new StockData("META", date.AddHours(15.7), 253.399994, 255.619995, 249.169998, 252.690002, 22371400));
            this.META.Add(new StockData("META", date.AddHours(15.8), 245.279999, 249.589996, 244.949997, 249.210007, 17724300));
            this.META.Add(new StockData("META", date.AddHours(15.9), 246.809998, 251.610001, 246.649994, 246.740005, 17748100));
            this.META.Add(new StockData("META", date.AddHours(16), 245.410004, 253.570007, 245.119995, 248.320007, 27738500));
            this.META.Add(new StockData("META", date.AddHours(16.1), 247.470001, 248.690002, 243.410004, 245.639999, 21599800));
            this.META.Add(new StockData("META", date.AddHours(16.2), 241.300003, 247.089996, 241.190002, 246.850006, 22943300));
            this.META.Add(new StockData("META", date.AddHours(16.3), 238.449997, 243.839996, 238.139999, 242.490005, 21193100));
            this.META.Add(new StockData("META", date.AddHours(16.4), 235.789993, 239.639999, 235.520004, 238.820007, 18163800));
            this.META.Add(new StockData("META", date.AddHours(16.5), 236.919998, 240.259995, 235.330002, 238.860001, 20653200));
            this.META.Add(new StockData("META", date.AddHours(16.6), 236.740005, 236.960007, 231.449997, 233.809998, 16155300));
            this.META.Add(new StockData("META", date.AddHours(16.7), 247.470001, 248.690002, 243.410004, 245.639999, 21599800));
            this.META.Add(new StockData("META", date.AddHours(16.8), 253.399994, 255.619995, 249.169998, 252.690002, 22371400));
            this.META.Add(new StockData("META", date.AddHours(16.9), 245.279999, 249.589996, 244.949997, 249.210007, 17724300));
            this.META.Add(new StockData("META", date.AddHours(17), 246.809998, 251.610001, 246.649994, 246.740005, 17748100)); 
            META = META.Where(item => item != null && (item.Date.Hour < Today.Hour || (item.Date.Hour == Today.Hour && item.Date.Minute <= Today.Minute))).ToObservableCollection();

            this.IBM = new ObservableCollection<StockData>();
            this.IBM.Add(new StockData("IBM", date.AddHours(8), 126.370003, 127.019997, 125.459999, 126.970001, 3204900));
            this.IBM.Add(new StockData("IBM", date.AddHours(8.1), 125.391968, 126.357552, 120.267685, 120.516251, 16063004));
            this.IBM.Add(new StockData("IBM", date.AddHours(8.2), 127.82, 127.900002, 125.470001, 125.68, 3915500));
            this.IBM.Add(new StockData("IBM", date.AddHours(8.3), 125.610001, 127.230003, 125.010002, 126.760002, 4102900));
            this.IBM.Add(new StockData("IBM", date.AddHours(8.4), 124.080002, 124.519997, 122.93, 123.690002, 37400200));
            this.IBM.Add(new StockData("IBM", date.AddHours(8.5), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(8.6), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(8.7), 117.772469, 118.040154, 116.051628, 116.510513, 5152073));
            this.IBM.Add(new StockData("IBM", date.AddHours(8.8), 117.772469, 118.040154, 116.051628, 116.510513, 5152073));
            this.IBM.Add(new StockData("IBM", date.AddHours(8.9), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(9), 128.460007, 129.839996, 127.309998, 128.139999, 4180600));
            this.IBM.Add(new StockData("IBM", date.AddHours(9.1), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(9.2), 123.422562, 123.680687, 121.558319, 121.7304, 4414225));
            this.IBM.Add(new StockData("IBM", date.AddHours(9.3), 117.772469, 118.040154, 116.051628, 116.510513, 5152073));
            this.IBM.Add(new StockData("IBM", date.AddHours(9.4), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(9.5), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(9.6), 117.772469, 118.040154, 116.051628, 116.510513, 5152073));
            this.IBM.Add(new StockData("IBM", date.AddHours(9.7), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(9.8), 132.160004, 132.600006, 130.320007, 130.5, 3050600));
            this.IBM.Add(new StockData("IBM", date.AddHours(9.9), 120.621414, 121.242828, 116.873802, 117.084129, 8471554));
            this.IBM.Add(new StockData("IBM", date.AddHours(10), 128.009995, 128.389999, 126, 127.900002, 5621500));
            this.IBM.Add(new StockData("IBM", date.AddHours(10.1), 126.580002, 127.25, 125.639999, 126.410004, 5060500));
            this.IBM.Add(new StockData("IBM", date.AddHours(10.2), 126.370003, 127.019997, 125.459999, 126.970001, 3204900));
            this.IBM.Add(new StockData("IBM", date.AddHours(10.3), 125.391968, 126.357552, 120.267685, 120.516251, 16063004));
            this.IBM.Add(new StockData("IBM", date.AddHours(10.4), 127.82, 127.900002, 125.470001, 125.68, 3915500));
            this.IBM.Add(new StockData("IBM", date.AddHours(10.5), 125.610001, 127.230003, 125.010002, 126.760002, 4102900));
            this.IBM.Add(new StockData("IBM", date.AddHours(10.6), 124.080002, 124.519997, 122.93, 123.690002, 37400200));
            this.IBM.Add(new StockData("IBM", date.AddHours(10.7), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(10.8), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(10.9), 117.772469, 118.040154, 116.051628, 116.510513, 5152073));
            this.IBM.Add(new StockData("IBM", date.AddHours(11), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(11.1), 132.160004, 132.600006, 130.320007, 130.5, 3050600));
            this.IBM.Add(new StockData("IBM", date.AddHours(11.2), 120.621414, 121.242828, 116.873802, 117.084129, 8471554));
            this.IBM.Add(new StockData("IBM", date.AddHours(11.3), 128.009995, 128.389999, 126, 127.900002, 5621500));
            this.IBM.Add(new StockData("IBM", date.AddHours(11.4), 123.809998, 124.93, 122.599998, 123.370003, 4651900));
            this.IBM.Add(new StockData("IBM", date.AddHours(11.5), 129.179993, 129.660004, 128.800003, 129.339996, 2888900));
            this.IBM.Add(new StockData("IBM", date.AddHours(11.6), 128.460007, 129.839996, 127.309998, 128.139999, 4180600));
            this.IBM.Add(new StockData("IBM", date.AddHours(11.7), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(11.8), 123.422562, 123.680687, 121.558319, 121.7304, 4414225));
            this.IBM.Add(new StockData("IBM", date.AddHours(11.9), 126.580002, 127.25, 125.639999, 126.410004, 5060500));
            this.IBM.Add(new StockData("IBM", date.AddHours(12), 126.370003, 127.019997, 125.459999, 126.970001, 3204900));
            this.IBM.Add(new StockData("IBM", date.AddHours(12.1), 125.391968, 126.357552, 120.267685, 120.516251, 16063004));
            this.IBM.Add(new StockData("IBM", date.AddHours(12.2), 127.82, 127.900002, 125.470001, 125.68, 3915500));
            this.IBM.Add(new StockData("IBM", date.AddHours(12.3), 125.610001, 127.230003, 125.010002, 126.760002, 4102900));
            this.IBM.Add(new StockData("IBM", date.AddHours(12.4), 124.080002, 124.519997, 122.93, 123.690002, 37400200));
            this.IBM.Add(new StockData("IBM", date.AddHours(12.5), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(12.6), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(12.7), 117.772469, 118.040154, 116.051628, 116.510513, 5152073));
            this.IBM.Add(new StockData("IBM", date.AddHours(12.8), 120.621414, 121.242828, 116.873802, 117.084129, 8471554));
            this.IBM.Add(new StockData("IBM", date.AddHours(12.9), 128.009995, 128.389999, 126, 127.900002, 5621500));
            this.IBM.Add(new StockData("IBM", date.AddHours(13), 126.5, 126.980003, 125.300003, 126.32, 7014400));
            this.IBM.Add(new StockData("IBM", date.AddHours(13.1), 125.391968, 126.357552, 120.267685, 120.516251, 16063004));
            this.IBM.Add(new StockData("IBM", date.AddHours(13.2), 127.82, 127.900002, 125.470001, 125.68, 3915500));
            this.IBM.Add(new StockData("IBM", date.AddHours(13.3), 126.580002, 127.25, 125.639999, 126.410004, 5060500));
            this.IBM.Add(new StockData("IBM", date.AddHours(13.4), 127.82, 127.900002, 125.470001, 125.68, 3915500));
            this.IBM.Add(new StockData("IBM", date.AddHours(13.5), 125.610001, 127.230003, 125.010002, 126.760002, 4102900));
            this.IBM.Add(new StockData("IBM", date.AddHours(13.6), 124.080002, 124.519997, 122.93, 123.690002, 37400200));
            this.IBM.Add(new StockData("IBM", date.AddHours(13.7), 123.809998, 124.93, 122.599998, 123.370003, 4651900));
            this.IBM.Add(new StockData("IBM", date.AddHours(13.8), 129.179993, 129.660004, 128.800003, 129.339996, 2888900));
            this.IBM.Add(new StockData("IBM", date.AddHours(13.9), 126.370003, 127.019997, 125.459999, 126.970001, 3204900));
            this.IBM.Add(new StockData("IBM", date.AddHours(14), 125.391968, 126.357552, 120.267685, 120.516251, 16063004));
            this.IBM.Add(new StockData("IBM", date.AddHours(14.1), 127.82, 127.900002, 125.470001, 125.68, 3915500));
            this.IBM.Add(new StockData("IBM", date.AddHours(14.2), 125.610001, 127.230003, 125.010002, 126.760002, 4102900));
            this.IBM.Add(new StockData("IBM", date.AddHours(14.3), 124.080002, 124.519997, 122.93, 123.690002, 37400200));
            this.IBM.Add(new StockData("IBM", date.AddHours(14.4), 128.460007, 129.839996, 127.309998, 128.139999, 4180600));
            this.IBM.Add(new StockData("IBM", date.AddHours(14.5), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(14.6), 129.179993, 129.660004, 128.800003, 129.339996, 2888900));
            this.IBM.Add(new StockData("IBM", date.AddHours(14.7), 120.621414, 121.242828, 116.873802, 117.084129, 8471554));
            this.IBM.Add(new StockData("IBM", date.AddHours(14.8), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(14.9), 132.160004, 132.600006, 130.320007, 130.5, 3050600));
            this.IBM.Add(new StockData("IBM", date.AddHours(15), 120.621414, 121.242828, 116.873802, 117.084129, 8471554));
            this.IBM.Add(new StockData("IBM", date.AddHours(15.1), 128.009995, 128.389999, 126, 127.900002, 5621500));
            this.IBM.Add(new StockData("IBM", date.AddHours(15.2), 126.5, 126.980003, 125.300003, 126.32, 7014400));
            this.IBM.Add(new StockData("IBM", date.AddHours(15.3), 124.080002, 124.519997, 122.93, 123.690002, 37400200));
            this.IBM.Add(new StockData("IBM", date.AddHours(15.4), 123.809998, 124.93, 122.599998, 123.370003, 4651900));
            this.IBM.Add(new StockData("IBM", date.AddHours(15.5), 129.179993, 129.660004, 128.800003, 129.339996, 2888900));
            this.IBM.Add(new StockData("IBM", date.AddHours(15.6), 120.621414, 121.242828, 116.873802, 117.084129, 8471554));
            this.IBM.Add(new StockData("IBM", date.AddHours(15.7), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(15.8), 129.179993, 129.660004, 128.800003, 129.339996, 2888900));
            this.IBM.Add(new StockData("IBM", date.AddHours(15.9), 128.460007, 129.839996, 127.309998, 128.139999, 4180600));
            this.IBM.Add(new StockData("IBM", date.AddHours(16), 126.5, 126.980003, 125.300003, 126.32, 7014400));
            this.IBM.Add(new StockData("IBM", date.AddHours(16.1), 124.080002, 124.519997, 122.93, 123.690002, 37400200));
            this.IBM.Add(new StockData("IBM", date.AddHours(16.2), 126.370003, 127.019997, 125.459999, 126.970001, 3204900));
            this.IBM.Add(new StockData("IBM", date.AddHours(16.3), 121.290634, 121.38623, 118.757172, 119.053535, 4095404));
            this.IBM.Add(new StockData("IBM", date.AddHours(16.4), 123.422562, 123.680687, 121.558319, 121.7304, 4414225));
            this.IBM.Add(new StockData("IBM", date.AddHours(16.5), 125.391968, 126.357552, 120.267685, 120.516251, 16063004));
            this.IBM.Add(new StockData("IBM", date.AddHours(16.6), 126.370003, 127.019997, 125.459999, 126.970001, 3204900));
            this.IBM.Add(new StockData("IBM", date.AddHours(16.7), 123.809998, 124.93, 122.599998, 123.370003, 4651900));
            this.IBM.Add(new StockData("IBM", date.AddHours(16.8), 129.179993, 129.660004, 128.800003, 129.339996, 2888900));
            this.IBM.Add(new StockData("IBM", date.AddHours(16.9), 126.370003, 127.019997, 125.459999, 126.970001, 3204900));
            this.IBM.Add(new StockData("IBM", date.AddHours(17), 125.391968, 126.357552, 120.267685, 120.516251, 16063004));
            IBM = IBM.Where(item => item != null && (item.Date.Hour < Today.Hour || (item.Date.Hour == Today.Hour && item.Date.Minute <= Today.Minute))).ToObservableCollection();

            this.ADBE = new ObservableCollection<StockData>();
            this.ADBE.Add(new StockData("ADBE", date.AddHours(8), 396.720001, 416.359985, 396.570007, 415.390015, 7830900));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(8.1), 416.51001, 418.720001, 413.709991, 414.149994, 1868000));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(8.2), 408.410004, 409.059998, 401.720001, 405.76001, 2666600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(8.3), 411.809998, 416.48999, 409.920013, 410.420013, 2967700));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(8.4), 411.25, 414.399994, 409.660004, 412.049988, 2627100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(8.5), 414.359985, 415.850006, 407.839996, 408.660004, 2287600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(8.6), 416.51001, 418.720001, 413.709991, 414.149994, 1868000));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(8.7), 411.420013, 417.690002, 408.559998, 417.559998, 2061200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(8.8), 405.940002, 413.820007, 403.5, 411.420013, 2338800));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(8.9), 408.600006, 409.450012, 397.25, 403.059998, 2803200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(9), 423.630005, 425.230011, 408.880005, 409.589996, 2413100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(9.1), 429.970001, 430.440002, 425.440002, 437.670013, 1841600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(9.2), 416.040009, 423, 415.670013, 430.26001, 1947900));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(9.3), 417.899994, 422.839996, 415.600006, 420.109985, 1775200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(9.4), 419.609985, 420.76001, 414.619995, 417.920013, 1614300));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(9.5), 413.200012, 419.019989, 412.730011, 418.799988, 2434800));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(9.6), 416.420013, 418.230011, 408.75, 409.890015, 1978200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(9.7), 414.01001, 415.899994, 408.350006, 411.109985, 2161100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(9.8), 415.480011, 416.670013, 412.26001, 416.25, 1689700));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(9.9), 419.309998, 422.459991, 425.98999, 430.600006, 1835900));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(10), 426.679993, 430.119995, 415.559998, 429.160004, 2497600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(10.1), 413.420013, 414, 407.820007, 413.399994, 1780800));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(10.2), 419.609985, 420.76001, 414.619995, 417.920013, 1614300));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(10.3), 414.359985, 415.850006, 407.839996, 408.660004, 2287600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(10.4), 411.25, 414.399994, 409.660004, 412.049988, 2627100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(10.5), 411.809998, 416.48999, 409.920013, 410.420013, 2967700));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(10.6), 408.410004, 409.059998, 401.720001, 405.76001, 2666600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(10.7), 415.48999, 437.649994, 414.089996, 432.059998, 7030000));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(10.8), 426.51001, 418.720001, 413.709991, 414.149994, 1868000));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(10.9), 411.420013, 417.690002, 408.559998, 417.559998, 2061200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(11), 405.940002, 413.820007, 403.5, 411.420013, 2338800));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(11.1), 408.600006, 409.450012, 397.25, 403.059998, 2803200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(11.2), 413.630005, 415.230011, 408.880005, 409.589996, 2413100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(11.3), 416.589996, 418.950012, 413.570007, 417.339996, 1531100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(11.4), 419.970001, 420.440002, 415.440002, 417.670013, 1841600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(11.5), 416.040009, 423, 415.670013, 420.26001, 1947900));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(11.6), 417.899994, 422.839996, 415.600006, 420.109985, 1775200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(11.7), 419.609985, 420.76001, 414.619995, 417.920013, 1614300));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(11.8), 416.420013, 418.230011, 408.75, 409.890015, 1978200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(11.9), 414.01001, 415.899994, 408.350006, 411.109985, 2161100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(12), 415.480011, 416.670013, 412.26001, 416.25, 1689700));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(12.1), 415.48999, 437.649994, 414.089996, 432.059998, 7030000));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(12.2), 408.410004, 409.059998, 401.720001, 405.76001, 2666600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(12.3), 411.809998, 416.48999, 409.920013, 410.420013, 2967700));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(12.4), 401.25, 414.399994, 409.660004, 412.049988, 2627100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(12.5), 414.359985, 415.850006, 407.839996, 408.660004, 2287600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(12.6), 416.51001, 418.720001, 413.709991, 414.149994, 1868000));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(12.7), 411.420013, 417.690002, 408.559998, 417.559998, 2061200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(12.8), 405.940002, 413.820007, 403.5, 411.420013, 2338800));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(12.9), 408.600006, 409.450012, 397.25, 403.059998, 2803200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(13), 413.630005, 415.230011, 408.880005, 409.589996, 2413100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(13.1), 419.970001, 420.440002, 415.440002, 417.670013, 1841600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(13.2), 416.040009, 423, 415.670013, 420.26001, 1947900));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(13.3), 417.899994, 422.839996, 415.600006, 420.109985, 1775200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(13.4), 419.609985, 420.76001, 414.619995, 417.920013, 1614300));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(13.5), 413.200012, 419.019989, 422.730011, 418.799988, 2434800));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(13.6), 416.420013, 418.230011, 408.75, 409.890015, 1978200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(13.7), 414.01001, 415.899994, 408.350006, 411.109985, 2161100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(13.8), 415.480011, 416.670013, 412.26001, 416.25, 1689700));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(13.9), 419.309998, 422.459991, 425.98999, 420.600006, 1835900));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(14), 416.679993, 420.119995, 415.559998, 419.160004, 2497600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(14.1), 413.420013, 414, 407.820007, 413.399994, 1780800));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(14.2), 419.609985, 420.76001, 414.619995, 417.920013, 1614300));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(14.3), 414.359985, 415.850006, 407.839996, 408.660004, 2287600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(14.4), 411.25, 414.399994, 409.660004, 412.049988, 2627100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(14.5), 411.809998, 416.48999, 409.920013, 410.420013, 2967700));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(14.6), 408.410004, 409.059998, 401.720001, 405.76001, 2666600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(14.7), 415.48999, 407.649994, 414.089996, 402.059998, 7030000));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(14.8), 416.51001, 418.720001, 413.709991, 414.149994, 1868000));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(14.9), 411.420013, 417.690002, 408.559998, 417.559998, 2061200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(15), 405.940002, 413.820007, 403.5, 411.420013, 2338800));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(15.1), 408.600006, 409.450012, 397.25, 403.059998, 2803200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(15.2), 413.630005, 415.230011, 408.880005, 409.589996, 2413100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(15.3), 416.589996, 418.950012, 413.570007, 417.339996, 1531100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(15.4), 419.970001, 420.440002, 415.440002, 417.670013, 1841600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(15.5), 416.040009, 423, 415.670013, 420.26001, 1947900));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(15.6), 417.899994, 422.839996, 415.600006, 420.109985, 1775200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(15.7), 419.609985, 420.76001, 414.619995, 417.920013, 1614300));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(15.8), 416.420013, 418.230011, 408.75, 409.890015, 1978200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(15.9), 414.01001, 415.899994, 408.350006, 411.109985, 2161100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(16), 419.309998, 422.459991, 415.98999, 420.600006, 1835900));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(16.1), 416.679993, 420.119995, 415.559998, 419.160004, 2497600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(16.2), 413.420013, 414, 407.820007, 413.399994, 1780800));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(16.3), 414.359985, 415.850006, 407.839996, 408.660004, 2287600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(16.4), 411.25, 414.399994, 409.660004, 412.049988, 2627100));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(16.5), 411.809998, 416.48999, 409.920013, 410.420013, 2967700));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(16.6), 408.410004, 409.059998, 401.720001, 405.76001, 2666600));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(16.7), 415.48999, 437.649994, 414.089996, 432.059998, 7030000));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(16.8), 416.51001, 418.720001, 413.709991, 414.149994, 1868000));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(16.9), 411.420013, 417.690002, 408.559998, 417.559998, 2061200));
            this.ADBE.Add(new StockData("ADBE", date.AddHours(17), 405.940002, 413.820007, 403.5, 411.420013, 2338800)); ADBE = ADBE.Where(item => item != null && (item.Date.Hour < Today.Hour || (item.Date.Hour == Today.Hour && item.Date.Minute <= Today.Minute))).ToObservableCollection();

            this.TWTR = new ObservableCollection<StockData>();
            this.TWTR.Add(new StockData("TWTR", date.AddHours(8), 173.320007, 175.770004, 173.110001, 175.429993, 54794100));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(8.1), 172.410004, 173.899994, 171.690002, 172.990005, 56058300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(8.2), 171.089996, 172.419998, 170.520004, 171.839996, 45143500));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(8.3), 173.130005, 173.380005, 171.279999, 171.559998, 50747300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(8.4), 173.979996, 174.710007, 173.449997, 174.199997, 43570900));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(8.5), 176.389999, 176.389999, 174.940002, 175.160004, 55772400));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(8.6), 173, 175.240005, 172.580002, 175.050003, 65496700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(8.7), 171.710007, 172.929993, 170.419998, 172.690002, 57951600));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(8.8), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(8.9), 173.160004, 173.210007, 171.470001, 172.070007, 37266700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(9), 173.619995, 174.059998, 171, 172.570007, 45497800));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(9.1), 173.850006, 174.589996, 172.169998, 173.75, 49514700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(9.2), 172.410004, 173.899994, 171.690002, 172.990005, 56058300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(9.3), 173.320007, 175.770004, 173.110001, 175.429993, 54794100));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(9.4), 173.160004, 173.210007, 171.470001, 172.070007, 37266700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(9.5), 173.020004, 174.029999, 171.899994, 173.559998, 53724500));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(9.6), 173.050003, 173.539993, 171.600006, 171.770004, 45326900));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(9.7), 172.479996, 173.850006, 172.110001, 173.5, 55962800));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(9.8), 170.979996, 174.300003, 170.759995, 173.570007, 113316400));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(9.9), 169.5, 170.919998, 167.160004, 167.449997, 65136000));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(10), 170.089996, 170.350006, 167.539993, 168.539993, 48425700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(10.1), 169.279999, 170.449997, 168.639999, 169.589996, 52472900));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(10.2), 168.490005, 169.850006, 167.880005, 169.679993, 55209200));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(10.3), 173.130005, 173.380005, 171.279999, 171.559998, 50747300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(10.4), 173.979996, 174.710007, 173.449997, 174.199997, 43570900));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(10.5), 173.130005, 173.380005, 171.279999, 171.559998, 50747300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(10.6), 171.089996, 172.419998, 170.520004, 171.839996, 45143500));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(10.7), 172.410004, 173.899994, 171.690002, 172.990005, 56058300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(10.8), 173.320007, 175.770004, 173.110001, 175.429993, 54794100));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(10.9), 176.389999, 176.389999, 174.940002, 175.160004, 55772400));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(11), 173, 175.240005, 172.580002, 175.050003, 65496700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(11.1), 171.710007, 172.929993, 170.419998, 172.690002, 57951600));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(11.2), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(11.3), 173.160004, 173.210007, 171.470001, 172.070007, 37266700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(11.4), 173.619995, 174.059998, 171, 172.570007, 45497800));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(11.5), 173.850006, 174.589996, 172.169998, 173.75, 49514700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(11.6), 173.020004, 174.029999, 171.899994, 173.559998, 53724500));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(11.7), 173.050003, 173.539993, 171.600006, 171.770004, 45326900));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(11.8), 172.479996, 173.850006, 172.110001, 173.5, 55962800));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(11.9), 170.979996, 174.300003, 170.759995, 173.570007, 113316400));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(12), 169.5, 170.919998, 167.160004, 167.449997, 65136000));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(12.1), 170.089996, 170.350006, 167.539993, 168.539993, 48425700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(12.2), 169.279999, 170.449997, 168.639999, 169.589996, 52472900));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(12.3), 168.490005, 169.850006, 167.880005, 169.679993, 55209200));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(12.4), 173.130005, 173.380005, 171.279999, 171.559998, 50747300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(12.5), 176.389999, 176.389999, 174.940002, 175.160004, 55772400));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(12.6), 173, 175.240005, 172.580002, 175.050003, 65496700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(12.7), 171.710007, 172.929993, 170.419998, 172.690002, 57951600));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(12.8), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(12.9), 173.160004, 173.210007, 171.470001, 172.070007, 37266700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(13), 173.619995, 174.059998, 171, 172.570007, 45497800));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(13.1), 173.850006, 174.589996, 172.169998, 173.75, 49514700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(13.2), 172.410004, 173.899994, 171.690002, 172.990005, 56058300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(13.3), 173.320007, 175.770004, 173.110001, 175.429993, 54794100));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(13.4), 173.160004, 173.210007, 171.470001, 172.070007, 37266700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(13.5), 173.020004, 174.029999, 171.899994, 173.559998, 53724500));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(13.6), 173.050003, 173.539993, 171.600006, 171.770004, 45326900));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(13.7), 172.479996, 173.850006, 172.110001, 173.5, 55962800));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(13.8), 170.979996, 174.300003, 170.759995, 173.570007, 113316400));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(13.9), 169.5, 170.919998, 167.160004, 167.449997, 65136000));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(14), 170.089996, 170.350006, 167.539993, 168.539993, 48425700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(14.1), 169.279999, 170.449997, 168.639999, 169.589996, 52472900));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(14.2), 168.490005, 169.850006, 167.880005, 169.679993, 55209200));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(14.3), 173.130005, 173.380005, 171.279999, 171.559998, 50747300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(14.4), 173.979996, 174.710007, 173.449997, 174.199997, 43570900));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(14.5), 173.130005, 173.380005, 171.279999, 171.559998, 50747300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(14.6), 171.089996, 172.419998, 170.520004, 171.839996, 45143500));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(14.7), 172.410004, 173.899994, 171.690002, 172.990005, 56058300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(14.8), 173.320007, 175.770004, 173.110001, 175.429993, 54794100));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(14.9), 176.389999, 176.389999, 174.940002, 175.160004, 55772400));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(15), 173, 175.240005, 172.580002, 175.050003, 65496700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(15.1), 171.710007, 172.929993, 170.419998, 172.690002, 57951600));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(15.2), 171.990005, 173.139999, 171.800003, 172.070007, 42110300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(15.3), 173.160004, 173.210007, 171.470001, 172.070007, 37266700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(15.4), 173.619995, 174.059998, 171, 172.570007, 45497800));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(15.5), 173.850006, 174.589996, 172.169998, 173.75, 49514700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(15.6), 173.020004, 174.029999, 171.899994, 173.559998, 53724500));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(15.7), 173.050003, 173.539993, 171.600006, 171.770004, 45326900));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(15.8), 172.479996, 173.850006, 172.110001, 173.5, 55962800));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(15.9), 170.979996, 174.300003, 170.759995, 173.570007, 113316400));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(16), 169.5, 170.919998, 167.160004, 167.449997, 65136000));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(16.1), 170.089996, 170.350006, 167.539993, 168.539993, 48425700));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(16.2), 169.279999, 170.449997, 168.639999, 169.589996, 52472900));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(16.3), 168.490005, 169.850006, 167.880005, 169.679993, 55209200));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(16.4), 173.130005, 173.380005, 171.279999, 171.559998, 50747300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(16.5), 173.130005, 173.380005, 171.279999, 171.559998, 50747300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(16.6), 171.089996, 172.419998, 170.520004, 171.839996, 45143500));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(16.7), 172.410004, 173.899994, 171.690002, 172.990005, 56058300));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(16.8), 173.320007, 175.770004, 173.110001, 175.429993, 54794100));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(16.9), 176.389999, 176.389999, 174.940002, 175.160004, 55772400));
            this.TWTR.Add(new StockData("TWTR", date.AddHours(17), 173, 175.240005, 172.580002, 175.050003, 65496700));
            TWTR = TWTR.Where(item => item != null && (item.Date.Hour < Today.Hour || (item.Date.Hour == Today.Hour && item.Date.Minute <= Today.Minute))).ToObservableCollection();

            this.TCS = new ObservableCollection<StockData>();

            this.TCS.Add(new StockData("TCS", date.AddHours(8), 3366, 3389, 3356.800049, 3379.199951, 1277950));
            this.TCS.Add(new StockData("TCS", date.AddHours(8.1), 3401, 3417.399902, 3343.649902, 3356.800049, 3417652));
            this.TCS.Add(new StockData("TCS", date.AddHours(8.2), 3381.050049, 3389.550049, 3365, 3376.149902, 944517));
            this.TCS.Add(new StockData("TCS", date.AddHours(8.3), 3394, 3394, 3360.100098, 3375.550049, 1037485));
            this.TCS.Add(new StockData("TCS", date.AddHours(8.4), 3375, 3385.800049, 3350.25, 3381.300049, 1158046));
            this.TCS.Add(new StockData("TCS", date.AddHours(8.5), 3408, 3413.050049, 3378.100098, 3387.75, 1152881));
            this.TCS.Add(new StockData("TCS", date.AddHours(8.6), 3388, 3402, 3376, 3398.25, 1330046));
            this.TCS.Add(new StockData("TCS", date.AddHours(8.7), 3400, 3411, 3365.050049, 3382.149902, 1222012));
            this.TCS.Add(new StockData("TCS", date.AddHours(8.8), 3366, 3389, 3356.800049, 3379.199951, 1277950));
            this.TCS.Add(new StockData("TCS", date.AddHours(8.9), 3375, 3409.75, 3372, 3401.649902, 1375579));
            this.TCS.Add(new StockData("TCS", date.AddHours(9), 3410, 3410, 3356.5, 3367.100098, 2526749));
            this.TCS.Add(new StockData("TCS", date.AddHours(9.1), 3401, 3417.399902, 3343.649902, 3356.800049, 3417652));
            this.TCS.Add(new StockData("TCS", date.AddHours(9.2), 3381.050049, 3389.550049, 3365, 3376.149902, 944517));
            this.TCS.Add(new StockData("TCS", date.AddHours(9.3), 3375, 3385.800049, 3350.25, 3381.300049, 1158046));
            this.TCS.Add(new StockData("TCS", date.AddHours(9.4), 3408, 3413.050049, 3378.100098, 3387.75, 1152881));
            this.TCS.Add(new StockData("TCS", date.AddHours(9.5), 3410, 3410, 3356.5, 3367.100098, 2526749));
            this.TCS.Add(new StockData("TCS", date.AddHours(9.6), 3388, 3402, 3376, 3398.25, 1330046));
            this.TCS.Add(new StockData("TCS", date.AddHours(9.7), 3400, 3411, 3365.050049, 3382.149902, 1222012));
            this.TCS.Add(new StockData("TCS", date.AddHours(9.8), 3394, 3394, 3360.100098, 3375.550049, 1037485));
            this.TCS.Add(new StockData("TCS", date.AddHours(9.9), 3366, 3389, 3356.800049, 3379.199951, 1277950));
            this.TCS.Add(new StockData("TCS", date.AddHours(10), 3410, 3410, 3356.5, 3367.100098, 2526749));
            this.TCS.Add(new StockData("TCS", date.AddHours(10.1), 3401, 3417.399902, 3343.649902, 3356.800049, 3417652));
            this.TCS.Add(new StockData("TCS", date.AddHours(10.2), 3381.050049, 3389.550049, 3365, 3376.149902, 944517));
            this.TCS.Add(new StockData("TCS", date.AddHours(10.3), 3375, 3385.800049, 3350.25, 3381.300049, 1158046));
            this.TCS.Add(new StockData("TCS", date.AddHours(10.4), 3394, 3394, 3360.100098, 3375.550049, 1037485));
            this.TCS.Add(new StockData("TCS", date.AddHours(10.5), 3401, 3417.399902, 3343.649902, 3356.800049, 3417652));
            this.TCS.Add(new StockData("TCS", date.AddHours(10.6), 3388, 3402, 3376, 3398.25, 1330046));
            this.TCS.Add(new StockData("TCS", date.AddHours(10.7), 3408, 3413.050049, 3378.100098, 3387.75, 1152881));
            this.TCS.Add(new StockData("TCS", date.AddHours(10.8), 3401, 3417.399902, 3343.649902, 3356.800049, 3417652));
            this.TCS.Add(new StockData("TCS", date.AddHours(10.9), 3401, 3417.399902, 3343.649902, 3356.800049, 3417652));
            this.TCS.Add(new StockData("TCS", date.AddHours(11), 3398, 3408.100098, 3383.050049, 3390.949951, 1188200));
            this.TCS.Add(new StockData("TCS", date.AddHours(11.1), 3400, 3411, 3365.050049, 3382.149902, 1222012));
            this.TCS.Add(new StockData("TCS", date.AddHours(11.2), 3381.050049, 3389.550049, 3365, 3376.149902, 944517));
            this.TCS.Add(new StockData("TCS", date.AddHours(11.3), 3398, 3408.100098, 3383.050049, 3390.949951, 1188200));
            this.TCS.Add(new StockData("TCS", date.AddHours(11.4), 3375, 3409.75, 3372, 3401.649902, 1375579));
            this.TCS.Add(new StockData("TCS", date.AddHours(11.5), 3401, 3417.399902, 3343.649902, 3356.800049, 3417652));
            this.TCS.Add(new StockData("TCS", date.AddHours(11.6), 3455, 3460.800049, 3413.199951, 3435.75, 1843241));
            this.TCS.Add(new StockData("TCS", date.AddHours(11.7), 3450, 3466, 3435.199951, 3458.399902, 1328445));
            this.TCS.Add(new StockData("TCS", date.AddHours(11.8), 3375, 3385.800049, 3350.25, 3381.300049, 1158046));
            this.TCS.Add(new StockData("TCS", date.AddHours(11.9), 3401, 3417.399902, 3343.649902, 3356.800049, 3417652));
            this.TCS.Add(new StockData("TCS", date.AddHours(12), 3450, 3466, 3435.199951, 3458.399902, 1328445));
            this.TCS.Add(new StockData("TCS", date.AddHours(12.1), 3375, 3409.75, 3372, 3401.649902, 1375579));
            this.TCS.Add(new StockData("TCS", date.AddHours(12.2), 3398, 3408.100098, 3383.050049, 3390.949951, 1188200));
            this.TCS.Add(new StockData("TCS", date.AddHours(12.3), 3381.050049, 3389.550049, 3365, 3376.149902, 944517));
            this.TCS.Add(new StockData("TCS", date.AddHours(12.4), 3408, 3413.050049, 3378.100098, 3387.75, 1152881));
            this.TCS.Add(new StockData("TCS", date.AddHours(12.5), 3440.699951, 3455, 3411, 3449.850098, 1190425));
            this.TCS.Add(new StockData("TCS", date.AddHours(12.6), 3455, 3460.800049, 3413.199951, 3435.75, 1843241));
            this.TCS.Add(new StockData("TCS", date.AddHours(12.7), 3440.699951, 3455, 3411, 3449.850098, 1190425));
            this.TCS.Add(new StockData("TCS", date.AddHours(12.8), 3410, 3410, 3356.5, 3367.100098, 2526749));
            this.TCS.Add(new StockData("TCS", date.AddHours(12.9), 3438.100098, 3466.649902, 3414, 3448.800049, 1679974));
            this.TCS.Add(new StockData("TCS", date.AddHours(13), 3450, 3464.899902, 3430.050049, 3442.100098, 1096701));
            this.TCS.Add(new StockData("TCS", date.AddHours(13.1), 3398, 3408.100098, 3383.050049, 3390.949951, 1188200));
            this.TCS.Add(new StockData("TCS", date.AddHours(13.2), 3484.050049, 3489.949951, 3456.600098, 3470.600098, 1634225));
            this.TCS.Add(new StockData("TCS", date.AddHours(13.3), 3450, 3466, 3435.199951, 3458.399902, 1328445));
            this.TCS.Add(new StockData("TCS", date.AddHours(13.4), 3401.25, 3471, 3401.25, 3443.550049, 2248493));
            this.TCS.Add(new StockData("TCS", date.AddHours(13.5), 3440.699951, 3455, 3411, 3449.850098, 1190425));
            this.TCS.Add(new StockData("TCS", date.AddHours(13.6), 3453.949951, 3488, 3441.25, 3484.050049, 1853889));
            this.TCS.Add(new StockData("TCS", date.AddHours(13.7), 3450, 3464.899902, 3430.050049, 3442.100098, 1096701));
            this.TCS.Add(new StockData("TCS", date.AddHours(13.8), 3438.100098, 3466.649902, 3414, 3448.800049, 1679974));
            this.TCS.Add(new StockData("TCS", date.AddHours(13.9), 3408, 3413.050049, 3378.100098, 3387.75, 1152881));
            this.TCS.Add(new StockData("TCS", date.AddHours(14), 3398, 3408.100098, 3383.050049, 3390.949951, 1188200));
            this.TCS.Add(new StockData("TCS", date.AddHours(14.1), 3455, 3460.800049, 3413.199951, 3435.75, 1843241));
            this.TCS.Add(new StockData("TCS", date.AddHours(14.2), 3450, 3466, 3435.199951, 3458.399902, 1328445));
            this.TCS.Add(new StockData("TCS", date.AddHours(14.3), 3464.899902, 3467, 3425.050049, 3462.5, 1794589));
            this.TCS.Add(new StockData("TCS", date.AddHours(14.4), 3484.050049, 3489.949951, 3456.600098, 3470.600098, 1634225));
            this.TCS.Add(new StockData("TCS", date.AddHours(14.5), 3440.699951, 3455, 3411, 3449.850098, 1190425));
            this.TCS.Add(new StockData("TCS", date.AddHours(14.6), 3381.050049, 3389.550049, 3365, 3376.149902, 944517));
            this.TCS.Add(new StockData("TCS", date.AddHours(14.7), 3453.949951, 3488, 3441.25, 3484.050049, 1853889));
            this.TCS.Add(new StockData("TCS", date.AddHours(14.8), 3401.25, 3471, 3401.25, 3443.550049, 2248493));
            this.TCS.Add(new StockData("TCS", date.AddHours(14.9), 3415, 3460, 3415, 3452.050049, 1956167));
            this.TCS.Add(new StockData("TCS", date.AddHours(15), 3420, 3433.25, 3368, 3399.949951, 2026351));
            this.TCS.Add(new StockData("TCS", date.AddHours(15.1), 3438.100098, 3466.649902, 3414, 3448.800049, 1679974));
            this.TCS.Add(new StockData("TCS", date.AddHours(15.2), 3484.050049, 3489.949951, 3456.600098, 3470.600098, 1634225));
            this.TCS.Add(new StockData("TCS", date.AddHours(15.3), 3434.949951, 3446.399902, 3413.600098, 3440.649902, 1914899));
            this.TCS.Add(new StockData("TCS", date.AddHours(15.4), 3453.949951, 3488, 3441.25, 3484.050049, 1853889));
            this.TCS.Add(new StockData("TCS", date.AddHours(15.5), 3440.699951, 3455, 3411, 3449.850098, 1190425));
            this.TCS.Add(new StockData("TCS", date.AddHours(15.6), 3450, 3464.899902, 3430.050049, 3442.100098, 1096701));
            this.TCS.Add(new StockData("TCS", date.AddHours(15.7), 3455, 3460.800049, 3413.199951, 3435.75, 1843241));
            this.TCS.Add(new StockData("TCS", date.AddHours(15.8), 3464.899902, 3467, 3425.050049, 3462.5, 1794589));
            this.TCS.Add(new StockData("TCS", date.AddHours(15.9), 3450, 3466, 3435.199951, 3458.399902, 1328445));
            this.TCS.Add(new StockData("TCS", date.AddHours(16), 3434.949951, 3446.399902, 3413.600098, 3440.649902, 1914899));
            this.TCS.Add(new StockData("TCS", date.AddHours(16.1), 3415, 3460, 3415, 3452.050049, 1956167));
            this.TCS.Add(new StockData("TCS", date.AddHours(16.2), 3420, 3433.25, 3368, 3399.949951, 2026351));
            this.TCS.Add(new StockData("TCS", date.AddHours(16.3), 3401.25, 3471, 3401.25, 3443.550049, 2248493));
            this.TCS.Add(new StockData("TCS", date.AddHours(16.4), 3484.050049, 3489.949951, 3456.600098, 3470.600098, 1634225));
            this.TCS.Add(new StockData("TCS", date.AddHours(16.5), 3453.949951, 3488, 3441.25, 3484.050049, 1853889));
            this.TCS.Add(new StockData("TCS", date.AddHours(16.6), 3464.899902, 3467, 3425.050049, 3462.5, 1794589));
            this.TCS.Add(new StockData("TCS", date.AddHours(16.7), 3450, 3466, 3435.199951, 3458.399902, 1328445));
            this.TCS.Add(new StockData("TCS", date.AddHours(16.8), 3450, 3464.899902, 3430.050049, 3442.100098, 1096701));
            this.TCS.Add(new StockData("TCS", date.AddHours(16.9), 3438.100098, 3466.649902, 3414, 3448.800049, 1679974));
            this.TCS.Add(new StockData("TCS", date.AddHours(17), 3440.699951, 3455, 3411, 3449.850098, 1190425));
            TCS = TCS.Where(item => item != null && (item.Date.Hour < Today.Hour || (item.Date.Hour == Today.Hour && item.Date.Minute <= Today.Minute))).ToObservableCollection();
            
           
            this.INTC = new ObservableCollection<StockData>();

            this.INTC.Add(new StockData("INTC", date.AddHours(8), 35.790001, 36.75, 35.73, 36.610001, 43782600));
            this.INTC.Add(new StockData("INTC", date.AddHours(8.1), 34.32, 35.560001, 34.299999, 35.139999, 48157600));
            this.INTC.Add(new StockData("INTC", date.AddHours(8.2), 34.060001, 34.66, 33.779999, 34.529999, 26279200));
            this.INTC.Add(new StockData("INTC", date.AddHours(8.3), 33.490002, 34.48, 33.470001, 34.310001, 29943600));
            this.INTC.Add(new StockData("INTC", date.AddHours(8.4), 32.529999, 33.400002, 32.349998, 33.25, 27324800));
            this.INTC.Add(new StockData("INTC", date.AddHours(8.5), 33.5, 33.779999, 33.209999, 33.619999, 22341800));
            this.INTC.Add(new StockData("INTC", date.AddHours(8.6), 34.52, 34.630001, 33.459999, 33.529999, 35757300));
            this.INTC.Add(new StockData("INTC", date.AddHours(8.7), 35.150002, 35.18, 34.279999, 34.389999, 39052000));
            this.INTC.Add(new StockData("INTC", date.AddHours(8.8), 35.82, 36.02, 35.279999, 35.799999, 24702200));
            this.INTC.Add(new StockData("INTC", date.AddHours(8.9), 36.869999, 37.189999, 35.669998, 35.77, 55630700));
            this.INTC.Add(new StockData("INTC", date.AddHours(9), 32.529999, 33.400002, 32.349998, 33.25, 27324800));
            this.INTC.Add(new StockData("INTC", date.AddHours(9.1), 34.32, 35.560001, 34.299999, 35.139999, 48157600));
            this.INTC.Add(new StockData("INTC", date.AddHours(9.2), 34.060001, 34.66, 33.779999, 34.529999, 26279200));
            this.INTC.Add(new StockData("INTC", date.AddHours(9.3), 36.75, 36.990002, 35.509998, 36.830002, 90863000));
            this.INTC.Add(new StockData("INTC", date.AddHours(9.4), 34.52, 34.630001, 33.459999, 33.529999, 35757300));
            this.INTC.Add(new StockData("INTC", date.AddHours(9.5), 33.490002, 34.48, 33.470001, 34.310001, 29943600));
            this.INTC.Add(new StockData("INTC", date.AddHours(9.6), 35.150002, 35.18, 34.279999, 34.389999, 39052000));
            this.INTC.Add(new StockData("INTC", date.AddHours(9.7), 33.5, 33.779999, 33.209999, 33.619999, 22341800));
            this.INTC.Add(new StockData("INTC", date.AddHours(9.8), 36.869999, 37.189999, 35.669998, 35.77, 55630700));
            this.INTC.Add(new StockData("INTC", date.AddHours(9.9), 35.82, 36.02, 35.279999, 35.799999, 24702200));
            this.INTC.Add(new StockData("INTC", date.AddHours(10), 35.790001, 36.75, 35.73, 36.610001, 43782600));
            this.INTC.Add(new StockData("INTC", date.AddHours(10.1), 34.32, 35.560001, 34.299999, 35.139999, 48157600));
            this.INTC.Add(new StockData("INTC", date.AddHours(10.2), 34.060001, 34.66, 33.779999, 34.529999, 26279200));
            this.INTC.Add(new StockData("INTC", date.AddHours(10.3), 32.529999, 33.400002, 32.349998, 33.25, 27324800));
            this.INTC.Add(new StockData("INTC", date.AddHours(10.4), 36.75, 36.990002, 35.509998, 36.830002, 90863000));
            this.INTC.Add(new StockData("INTC", date.AddHours(10.5), 35.150002, 35.18, 34.279999, 34.389999, 39052000));
            this.INTC.Add(new StockData("INTC", date.AddHours(10.6), 34.52, 34.630001, 33.459999, 33.529999, 35757300));
            this.INTC.Add(new StockData("INTC", date.AddHours(10.7), 33.5, 33.779999, 33.209999, 33.619999, 22341800));
            this.INTC.Add(new StockData("INTC", date.AddHours(10.8), 34.82, 35.029999, 34.110001, 34.549999, 58890800));
            this.INTC.Add(new StockData("INTC", date.AddHours(10.9), 35.82, 36.02, 35.279999, 35.799999, 24702200));
            this.INTC.Add(new StockData("INTC", date.AddHours(11), 36.869999, 37.189999, 35.669998, 35.77, 55630700));
            this.INTC.Add(new StockData("INTC", date.AddHours(11.1), 34.32, 35.560001, 34.299999, 35.139999, 48157600));
            this.INTC.Add(new StockData("INTC", date.AddHours(11.2), 35.790001, 36.75, 35.73, 36.610001, 43782600));
            this.INTC.Add(new StockData("INTC", date.AddHours(11.3), 35.82, 36.02, 35.279999, 35.799999, 24702200));
            this.INTC.Add(new StockData("INTC", date.AddHours(11.4), 34.060001, 34.66, 33.779999, 34.529999, 26279200));
            this.INTC.Add(new StockData("INTC", date.AddHours(11.5), 34.82, 35.029999, 34.110001, 34.549999, 58890800));
            this.INTC.Add(new StockData("INTC", date.AddHours(11.6), 33.490002, 34.48, 33.470001, 34.310001, 29943600));
            this.INTC.Add(new StockData("INTC", date.AddHours(11.7), 33.720001, 34.529999, 33.700001, 34.360001, 32643200));
            this.INTC.Add(new StockData("INTC", date.AddHours(11.8), 33.5, 33.779999, 33.209999, 33.619999, 22341800));
            this.INTC.Add(new StockData("INTC", date.AddHours(11.9), 36.869999, 37.189999, 35.669998, 35.77, 55630700));
            this.INTC.Add(new StockData("INTC", date.AddHours(12), 32.529999, 33.400002, 32.349998, 33.25, 27324800));
            this.INTC.Add(new StockData("INTC", date.AddHours(12.1), 34.52, 34.630001, 33.459999, 33.529999, 35757300));
            this.INTC.Add(new StockData("INTC", date.AddHours(12.2), 35.150002, 35.18, 34.279999, 34.389999, 39052000));
            this.INTC.Add(new StockData("INTC", date.AddHours(12.3), 36.75, 36.990002, 35.509998, 36.830002, 90863000));
            this.INTC.Add(new StockData("INTC", date.AddHours(12.4), 33.700001, 34.34, 33.400002, 34.099998, 31771100));
            this.INTC.Add(new StockData("INTC", date.AddHours(12.5), 33.84, 34.459999, 33.560001, 33.630001, 25225800));
            this.INTC.Add(new StockData("INTC", date.AddHours(12.6), 33.720001, 34.529999, 33.700001, 34.360001, 32643200));
            this.INTC.Add(new StockData("INTC", date.AddHours(12.7), 35.82, 36.02, 35.279999, 35.799999, 24702200));
            this.INTC.Add(new StockData("INTC", date.AddHours(12.8), 33.73, 34.25, 33.419998, 34.02, 79724100));
            this.INTC.Add(new StockData("INTC", date.AddHours(12.9), 34.82, 35.029999, 34.110001, 34.549999, 58890800));
            this.INTC.Add(new StockData("INTC", date.AddHours(13), 33.700001, 34.209999, 33.23, 33.369999, 37878000));
            this.INTC.Add(new StockData("INTC", date.AddHours(13.1), 33.700001, 34.34, 33.400002, 34.099998, 31771100));
            this.INTC.Add(new StockData("INTC", date.AddHours(13.2), 33.73, 34.25, 33.419998, 34.02, 79724100));
            this.INTC.Add(new StockData("INTC", date.AddHours(13.3), 33.84, 34.459999, 33.560001, 33.630001, 25225800));
            this.INTC.Add(new StockData("INTC", date.AddHours(13.4), 35.82, 36.02, 35.279999, 35.799999, 24702200));
            this.INTC.Add(new StockData("INTC", date.AddHours(13.5), 36.75, 36.990002, 35.509998, 36.830002, 90863000));
            this.INTC.Add(new StockData("INTC", date.AddHours(13.6), 33.700001, 34.209999, 33.23, 33.369999, 37878000));
            this.INTC.Add(new StockData("INTC", date.AddHours(13.7), 35.150002, 35.18, 34.279999, 34.389999, 39052000));
            this.INTC.Add(new StockData("INTC", date.AddHours(13.8), 34.400002, 34.84, 34.330002, 34.459999, 26486700));
            this.INTC.Add(new StockData("INTC", date.AddHours(13.9), 34.279999, 34.700001, 33.830002, 34.5, 29679500));
            this.INTC.Add(new StockData("INTC", date.AddHours(14), 34.52, 34.630001, 33.459999, 33.529999, 35757300));
            this.INTC.Add(new StockData("INTC", date.AddHours(14.1), 36.869999, 37.189999, 35.669998, 35.77, 55630700));
            this.INTC.Add(new StockData("INTC", date.AddHours(14.2), 34.82, 35.029999, 34.110001, 34.549999, 58890800));
            this.INTC.Add(new StockData("INTC", date.AddHours(14.3), 33.84, 34.459999, 33.560001, 33.630001, 25225800));
            this.INTC.Add(new StockData("INTC", date.AddHours(14.4), 33.16, 34.599998, 33.07, 34.369999, 34111200));
            this.INTC.Add(new StockData("INTC", date.AddHours(14.5), 33.700001, 34.209999, 33.23, 33.369999, 37878000));
            this.INTC.Add(new StockData("INTC", date.AddHours(14.6), 34.279999, 34.700001, 33.830002, 34.5, 29679500));
            this.INTC.Add(new StockData("INTC", date.AddHours(14.7), 33.16, 34.599998, 33.07, 34.369999, 34111200));
            this.INTC.Add(new StockData("INTC", date.AddHours(14.8), 33.700001, 34.34, 33.400002, 34.099998, 31771100));
            this.INTC.Add(new StockData("INTC", date.AddHours(14.9), 35.150002, 35.18, 34.279999, 34.389999, 39052000));
            this.INTC.Add(new StockData("INTC", date.AddHours(15), 33.73, 34.25, 33.419998, 34.02, 79724100));
            this.INTC.Add(new StockData("INTC", date.AddHours(15.1), 33.84, 34.459999, 33.560001, 33.630001, 25225800));
            this.INTC.Add(new StockData("INTC", date.AddHours(15.2), 36.75, 36.990002, 35.509998, 36.830002, 90863000));
            this.INTC.Add(new StockData("INTC", date.AddHours(15.3), 34.82, 35.029999, 34.110001, 34.549999, 58890800));
            this.INTC.Add(new StockData("INTC", date.AddHours(15.4), 33.700001, 34.209999, 33.23, 33.369999, 37878000));
            this.INTC.Add(new StockData("INTC", date.AddHours(15.5), 34.52, 34.630001, 33.459999, 33.529999, 35757300));
            this.INTC.Add(new StockData("INTC", date.AddHours(15.6), 34.279999, 34.700001, 33.830002, 34.5, 29679500));
            this.INTC.Add(new StockData("INTC", date.AddHours(15.7), 33.720001, 34.529999, 33.700001, 34.360001, 32643200));
            this.INTC.Add(new StockData("INTC", date.AddHours(15.8), 34.400002, 34.84, 34.330002, 34.459999, 26486700));
            this.INTC.Add(new StockData("INTC", date.AddHours(15.9), 33.700001, 34.209999, 33.23, 33.369999, 37878000));
            this.INTC.Add(new StockData("INTC", date.AddHours(16), 33.73, 34.25, 33.419998, 34.02, 79724100));
            this.INTC.Add(new StockData("INTC", date.AddHours(16.1), 33.700001, 34.34, 33.400002, 34.099998, 31771100));
            this.INTC.Add(new StockData("INTC", date.AddHours(16.2), 34.400002, 34.84, 34.330002, 34.459999, 26486700));
            this.INTC.Add(new StockData("INTC", date.AddHours(16.3), 33.84, 34.459999, 33.560001, 33.630001, 25225800));
            this.INTC.Add(new StockData("INTC", date.AddHours(16.4), 36.75, 36.990002, 35.509998, 36.830002, 90863000));
            this.INTC.Add(new StockData("INTC", date.AddHours(16.5), 33.700001, 34.209999, 33.23, 33.369999, 37878000));
            this.INTC.Add(new StockData("INTC", date.AddHours(16.6), 33.73, 34.25, 33.419998, 34.02, 79724100));
            this.INTC.Add(new StockData("INTC", date.AddHours(16.7), 33.700001, 34.34, 33.400002, 34.099998, 31771100));
            this.INTC.Add(new StockData("INTC", date.AddHours(16.8), 33.720001, 34.529999, 33.700001, 34.360001, 32643200));
            this.INTC.Add(new StockData("INTC", date.AddHours(16.9), 34.52, 34.630001, 33.459999, 33.529999, 35757300));
            this.INTC.Add(new StockData("INTC", date.AddHours(17), 34.82, 35.029999, 34.110001, 34.549999, 58890800));
            INTC = INTC.Where(item => item != null && (item.Date.Hour < Today.Hour || (item.Date.Hour == Today.Hour && item.Date.Minute <= Today.Minute))).ToObservableCollection();
            this.HDB = new ObservableCollection<StockData>();

            this.HDB.Add(new StockData("HDB", date.AddHours(8), 63.150002, 63.720001, 62.759998, 62.799999, 1686400));
            this.HDB.Add(new StockData("HDB", date.AddHours(8.1), 62.990002, 63.18, 62.279999, 62.310001, 2659700));
            this.HDB.Add(new StockData("HDB", date.AddHours(8.2), 63.560001, 63.98, 63.060001, 63.68, 1021300));
            this.HDB.Add(new StockData("HDB", date.AddHours(8.3), 63.209999, 63.529999, 62.869999, 63.48, 1242700));
            this.HDB.Add(new StockData("HDB", date.AddHours(8.4), 63.5, 63.77, 63.02, 63.619999, 1770500));
            this.HDB.Add(new StockData("HDB", date.AddHours(8.5), 63, 63.360001, 62.389999, 62.73, 1672000));
            this.HDB.Add(new StockData("HDB", date.AddHours(8.6), 63.380001, 63.549999, 63.049999, 63.049999, 1176400));
            this.HDB.Add(new StockData("HDB", date.AddHours(8.7), 63.419998, 63.869999, 62.77, 62.959999, 2132200));
            this.HDB.Add(new StockData("HDB", date.AddHours(8.8), 63.5, 63.880001, 63.049999, 63.830002, 1791600));
            this.HDB.Add(new StockData("HDB", date.AddHours(8.9), 63.290001, 63.82, 62.889999, 63.66, 2134600));
            this.HDB.Add(new StockData("HDB", date.AddHours(9), 63, 63.07, 62.439999, 62.849998, 2737300));
            this.HDB.Add(new StockData("HDB", date.AddHours(9.1), 63.959999, 63.959999, 63.240002, 63.240002, 1385800));
            this.HDB.Add(new StockData("HDB", date.AddHours(9.2), 64.059998, 64.349998, 63.5, 63.57, 1949500));
            this.HDB.Add(new StockData("HDB", date.AddHours(9.3), 63.209999, 63.529999, 62.869999, 63.48, 1242700));
            this.HDB.Add(new StockData("HDB", date.AddHours(9.4), 63.5, 63.77, 63.02, 63.619999, 1770500));
            this.HDB.Add(new StockData("HDB", date.AddHours(9.5), 63.560001, 63.98, 63.060001, 63.68, 1021300));
            this.HDB.Add(new StockData("HDB", date.AddHours(9.6), 63.150002, 63.720001, 62.759998, 62.799999, 1686400));
            this.HDB.Add(new StockData("HDB", date.AddHours(9.7), 62.990002, 63.18, 62.279999, 62.310001, 2659700));
            this.HDB.Add(new StockData("HDB", date.AddHours(9.8), 63, 63.360001, 62.389999, 62.73, 1672000));
            this.HDB.Add(new StockData("HDB", date.AddHours(9.9), 64.610001, 65.040001, 63.740002, 63.860001, 2022500));
            this.HDB.Add(new StockData("HDB", date.AddHours(10), 65.870003, 65.879997, 64.730003, 65.099998, 1328500));
            this.HDB.Add(new StockData("HDB", date.AddHours(10.1), 63.419998, 63.869999, 62.77, 62.959999, 2132200));
            this.HDB.Add(new StockData("HDB", date.AddHours(10.2), 63.290001, 63.82, 62.889999, 63.66, 2134600));
            this.HDB.Add(new StockData("HDB", date.AddHours(10.3), 66.25, 66.669998, 66.050003, 66.32, 932700));
            this.HDB.Add(new StockData("HDB", date.AddHours(10.4), 66.889999, 67.540001, 66.470001, 66.57, 1128700));
            this.HDB.Add(new StockData("HDB", date.AddHours(10.5), 66.669998, 67.120003, 66.580002, 66.830002, 1002400));
            this.HDB.Add(new StockData("HDB", date.AddHours(10.6), 66.620003, 67.029999, 66.169998, 66.519997, 950600));
            this.HDB.Add(new StockData("HDB", date.AddHours(10.7), 63, 63.07, 62.439999, 62.849998, 2737300));
            this.HDB.Add(new StockData("HDB", date.AddHours(10.8), 63.5, 63.77, 63.02, 63.619999, 1770500));
            this.HDB.Add(new StockData("HDB", date.AddHours(10.9), 62.990002, 63.18, 62.279999, 62.310001, 2659700));
            this.HDB.Add(new StockData("HDB", date.AddHours(11), 63.150002, 63.720001, 62.759998, 62.799999, 1686400));
            this.HDB.Add(new StockData("HDB", date.AddHours(11.1), 63.560001, 63.98, 63.060001, 63.68, 1021300));
            this.HDB.Add(new StockData("HDB", date.AddHours(11.2), 63.209999, 63.529999, 62.869999, 63.48, 1242700));
            this.HDB.Add(new StockData("HDB", date.AddHours(11.3), 63.959999, 63.959999, 63.240002, 63.240002, 1385800));
            this.HDB.Add(new StockData("HDB", date.AddHours(11.4), 66.669998, 67.120003, 66.580002, 66.830002, 1002400));
            this.HDB.Add(new StockData("HDB", date.AddHours(11.5), 64.059998, 64.349998, 63.5, 63.57, 1949500));
            this.HDB.Add(new StockData("HDB", date.AddHours(11.6), 66.25, 66.669998, 66.050003, 66.32, 932700));
            this.HDB.Add(new StockData("HDB", date.AddHours(11.7), 64.610001, 65.040001, 63.740002, 63.860001, 2022500));
            this.HDB.Add(new StockData("HDB", date.AddHours(11.8), 63, 63.360001, 62.389999, 62.73, 1672000));
            this.HDB.Add(new StockData("HDB", date.AddHours(11.9), 65.870003, 65.879997, 64.730003, 65.099998, 1328500));
            this.HDB.Add(new StockData("HDB", date.AddHours(12), 63.380001, 63.549999, 63.049999, 63.049999, 1176400));
            this.HDB.Add(new StockData("HDB", date.AddHours(12.1), 63.560001, 63.98, 63.060001, 63.68, 1021300));
            this.HDB.Add(new StockData("HDB", date.AddHours(12.2), 66.889999, 67.540001, 66.470001, 66.57, 1128700));
            this.HDB.Add(new StockData("HDB", date.AddHours(12.3), 66.839996, 67.360001, 66.75, 66.959999, 1359900));
            this.HDB.Add(new StockData("HDB", date.AddHours(12.4), 66.620003, 67.029999, 66.169998, 66.519997, 950600));
            this.HDB.Add(new StockData("HDB", date.AddHours(12.5), 64.059998, 64.349998, 63.5, 63.57, 1949500));
            this.HDB.Add(new StockData("HDB", date.AddHours(12.6), 66, 66.739998, 65.900002, 66.279999, 1216900));
            this.HDB.Add(new StockData("HDB", date.AddHours(12.7), 66.669998, 67.120003, 66.580002, 66.830002, 1002400));
            this.HDB.Add(new StockData("HDB", date.AddHours(12.8), 63.959999, 63.959999, 63.240002, 63.240002, 1385800));
            this.HDB.Add(new StockData("HDB", date.AddHours(12.9), 67.050003, 67.059998, 66.150002, 66.68, 1368600));
            this.HDB.Add(new StockData("HDB", date.AddHours(13), 68.370003, 68.370003, 67.540001, 67.550003, 1165500));
            this.HDB.Add(new StockData("HDB", date.AddHours(13.1), 63, 63.07, 62.439999, 62.849998, 2737300));
            this.HDB.Add(new StockData("HDB", date.AddHours(13.2), 63.290001, 63.82, 62.889999, 63.66, 2134600));
            this.HDB.Add(new StockData("HDB", date.AddHours(13.3), 67.120003, 67.419998, 66.720001, 66.830002, 1378300));
            this.HDB.Add(new StockData("HDB", date.AddHours(13.4), 63.419998, 63.869999, 62.77, 62.959999, 2132200));
            this.HDB.Add(new StockData("HDB", date.AddHours(13.5), 70.019997, 71.389999, 70.019997, 70.809998, 2175900));
            this.HDB.Add(new StockData("HDB", date.AddHours(13.6), 63.380001, 63.549999, 63.049999, 63.049999, 1176400));
            this.HDB.Add(new StockData("HDB", date.AddHours(13.7), 64.610001, 65.040001, 63.740002, 63.860001, 2022500));
            this.HDB.Add(new StockData("HDB", date.AddHours(13.8), 66.889999, 67.540001, 66.470001, 66.57, 1128700));
            this.HDB.Add(new StockData("HDB", date.AddHours(13.9), 66.25, 66.669998, 66.050003, 66.32, 932700));
            this.HDB.Add(new StockData("HDB", date.AddHours(14), 66.839996, 67.360001, 66.75, 66.959999, 1359900));
            this.HDB.Add(new StockData("HDB", date.AddHours(14.1), 63.560001, 63.98, 63.060001, 63.68, 1021300));
            this.HDB.Add(new StockData("HDB", date.AddHours(14.2), 66.669998, 67.120003, 66.580002, 66.830002, 1002400));
            this.HDB.Add(new StockData("HDB", date.AddHours(14.3), 66.620003, 67.029999, 66.169998, 66.519997, 950600));
            this.HDB.Add(new StockData("HDB", date.AddHours(14.4), 68.599998, 69.029999, 68.040001, 68.279999, 903900));
            this.HDB.Add(new StockData("HDB", date.AddHours(14.5), 70.379997, 70.540001, 68.260002, 68.269997, 1541600));
            this.HDB.Add(new StockData("HDB", date.AddHours(14.6), 66, 66.739998, 65.900002, 66.279999, 1216900));
            this.HDB.Add(new StockData("HDB", date.AddHours(14.7), 66.620003, 67.029999, 66.169998, 66.519997, 950600));
            this.HDB.Add(new StockData("HDB", date.AddHours(14.8), 68.370003, 68.370003, 67.540001, 67.550003, 1165500));
            this.HDB.Add(new StockData("HDB", date.AddHours(14.9), 66.25, 66.669998, 66.050003, 66.32, 932700));
            this.HDB.Add(new StockData("HDB", date.AddHours(15), 70.019997, 71.389999, 70.019997, 70.809998, 2175900));
            this.HDB.Add(new StockData("HDB", date.AddHours(15.1), 63.380001, 63.549999, 63.049999, 63.049999, 1176400));
            this.HDB.Add(new StockData("HDB", date.AddHours(15.2), 68.43, 68.5, 67.889999, 68.089996, 1508000));
            this.HDB.Add(new StockData("HDB", date.AddHours(15.3), 70.379997, 70.540001, 68.260002, 68.269997, 1541600));
            this.HDB.Add(new StockData("HDB", date.AddHours(15.4), 66.839996, 67.360001, 66.75, 66.959999, 1359900));
            this.HDB.Add(new StockData("HDB", date.AddHours(15.5), 70.019997, 71.389999, 70.019997, 70.809998, 2175900));
            this.HDB.Add(new StockData("HDB", date.AddHours(15.6), 68.599998, 69.029999, 68.040001, 68.279999, 903900));
            this.HDB.Add(new StockData("HDB", date.AddHours(15.7), 66, 66.739998, 65.900002, 66.279999, 1216900));
            this.HDB.Add(new StockData("HDB", date.AddHours(15.8), 66.620003, 67.029999, 66.169998, 66.519997, 950600));
            this.HDB.Add(new StockData("HDB", date.AddHours(15.9), 68.43, 68.5, 67.889999, 68.089996, 1508000));
            this.HDB.Add(new StockData("HDB", date.AddHours(16), 66.669998, 67.120003, 66.580002, 66.830002, 1002400));
            this.HDB.Add(new StockData("HDB", date.AddHours(16.1), 68.370003, 68.370003, 67.540001, 67.550003, 1165500));
            this.HDB.Add(new StockData("HDB", date.AddHours(16.2), 67.050003, 67.059998, 66.150002, 66.68, 1368600));
            this.HDB.Add(new StockData("HDB", date.AddHours(16.3), 66, 66.739998, 65.900002, 66.279999, 1216900));
            this.HDB.Add(new StockData("HDB", date.AddHours(16.4), 67.120003, 67.419998, 66.720001, 66.830002, 1378300));
            this.HDB.Add(new StockData("HDB", date.AddHours(16.5), 66.839996, 67.360001, 66.75, 66.959999, 1359900));
            this.HDB.Add(new StockData("HDB", date.AddHours(16.6), 66.25, 66.669998, 66.050003, 66.32, 932700));
            this.HDB.Add(new StockData("HDB", date.AddHours(16.7), 65.870003, 65.879997, 64.730003, 65.099998, 1328500));
            this.HDB.Add(new StockData("HDB", date.AddHours(16.8), 63.560001, 63.98, 63.060001, 63.68, 1021300));
            this.HDB.Add(new StockData("HDB", date.AddHours(16.9), 63, 63.07, 62.439999, 62.849998, 2737300));
            this.HDB.Add(new StockData("HDB", date.AddHours(17), 63.959999, 63.959999, 63.240002, 63.240002, 1385800));
            HDB = HDB.Where(item => item != null && (item.Date.Hour < Today.Hour || (item.Date.Hour == Today.Hour && item.Date.Minute <= Today.Minute))).ToObservableCollection();
          
            this.WIPRO = new ObservableCollection<StockData>();

            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(8), 407.950012, 417.75, 407.5, 416.350006, 4238065));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(8.1), 408, 410, 406.450012, 408.399994, 11030976));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(8.2), 410, 410.200012, 406.649994, 407.200012, 2009091));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(8.3), 409.649994, 411.899994, 407.100006, 408.100006, 1999281));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(8.4), 411.450012, 412.450012, 407.649994, 408.049988, 1700987));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(8.5), 410, 411.299988, 407.100006, 409.700012, 3299255));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(8.6), 411.799988, 417.350006, 411.649994, 414.600006, 3667130));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(8.7), 413.25, 416.200012, 409.5, 415.149994, 2896090));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(8.8), 414.149994, 420.200012, 414, 418.649994, 4065890));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(8.9), 413.25, 416.200012, 409.5, 415.149994, 2896090));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(9), 415.5, 418.5, 412.549988, 417.799988, 4654694));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(9.1), 412.399994, 417.5, 409.950012, 416.350006, 7862142));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(9.2), 409.950012, 413, 408.049988, 411.149994, 4411433));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(9.3), 410, 410.200012, 406.649994, 407.200012, 2009091));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(9.4), 405.899994, 405.899994, 399, 402.799988, 2699809));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(9.5), 407.950012, 417.75, 407.5, 416.350006, 4238065));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(9.6), 409.649994, 411.899994, 407.100006, 408.100006, 1999281));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(9.7), 408, 410, 406.450012, 408.399994, 11030976));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(9.8), 410, 411.299988, 407.100006, 409.700012, 3299255));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(9.9), 414.149994, 420.200012, 414, 418.649994, 4065890));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(10), 411.450012, 412.450012, 407.649994, 408.049988, 1700987));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(10.1), 411.799988, 417.350006, 411.649994, 414.600006, 3667130));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(10.2), 413.25, 416.200012, 409.5, 415.149994, 2896090));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(10.3), 413.25, 416.200012, 409.5, 415.149994, 2896090));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(10.4), 404, 406.600006, 399, 399.950012, 4474179));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(10.5), 409.649994, 411.899994, 407.100006, 408.100006, 1999281));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(10.6), 407.950012, 417.75, 407.5, 416.350006, 4238065));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(10.7), 415.5, 418.5, 412.549988, 417.799988, 4654694));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(10.8), 412.399994, 417.5, 409.950012, 416.350006, 7862142));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(10.9), 411.799988, 417.350006, 411.649994, 414.600006, 3667130));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(11), 408, 410, 406.450012, 408.399994, 11030976));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(11.1), 410, 411.299988, 407.100006, 409.700012, 3299255));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(11.2), 410, 410.200012, 406.649994, 407.200012, 2009091));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(11.3), 406.299988, 408, 403.5, 404.049988, 3404230));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(11.4), 409.950012, 413, 408.049988, 411.149994, 4411433));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(11.5), 405.899994, 405.899994, 399, 402.799988, 2699809));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(11.6), 415.5, 418.5, 412.549988, 417.799988, 4654694));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(11.7), 414.149994, 420.200012, 414, 418.649994, 4065890));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(11.8), 407.950012, 417.75, 407.5, 416.350006, 4238065));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(11.9), 409.649994, 411.899994, 407.100006, 408.100006, 1999281));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(12), 404, 406.600006, 399, 399.950012, 4474179));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(12.1), 411.450012, 412.450012, 407.649994, 408.049988, 1700987));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(12.2), 405, 414.350006, 401, 404.700012, 11757106));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(12.3), 406.299988, 408, 403.5, 404.049988, 3404230));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(12.4), 412.399994, 417.5, 409.950012, 416.350006, 7862142));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(12.5), 407, 424.950012, 405.799988, 415.25, 22879930));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(12.6), 413.25, 416.200012, 409.5, 415.149994, 2896090));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(12.7), 405.899994, 405.899994, 399, 402.799988, 2699809));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(12.8), 408, 410, 406.450012, 408.399994, 11030976));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(12.9), 408.899994, 409.75, 403.700012, 404.200012, 3626430));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(13), 408.700012, 409.799988, 404, 404.950012, 3160377));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(13.1), 407.950012, 417.75, 407.5, 416.350006, 4238065));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(13.2), 409.950012, 413, 408.049988, 411.149994, 4411433));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(13.3), 405, 408, 404.049988, 407.149994, 3532742));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(13.4), 410, 410.200012, 406.649994, 407.200012, 2009091));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(13.5), 415.5, 418.5, 412.549988, 417.799988, 4654694));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(13.6), 404, 406, 399.350006, 399.799988, 3979654));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(13.7), 399.799988, 399.799988, 394.600006, 395.600006, 5986811));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(13.8), 414.149994, 420.200012, 414, 418.649994, 4065890));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(13.9), 399.450012, 400.350006, 396.049988, 397.299988, 6009116));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(14), 405.5, 408, 404.049988, 406.950012, 3590902));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(14.1), 407.950012, 417.75, 407.5, 416.350006, 4238065));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(14.2), 412.399994, 417.5, 409.950012, 416.350006, 7862142));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(14.3), 411.450012, 412.450012, 407.649994, 408.049988, 1700987));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(14.4), 408, 410, 406.450012, 408.399994, 11030976));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(14.5), 413.25, 416.200012, 409.5, 415.149994, 2896090));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(14.6), 408.899994, 409.75, 403.700012, 404.200012, 3626430));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(14.7), 405, 408, 404.049988, 407.149994, 3532742));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(14.8), 399.450012, 400.350006, 396.049988, 397.299988, 6009116));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(14.9), 404, 406.600006, 399, 399.950012, 4474179));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(15), 404, 406, 399.350006, 399.799988, 3979654));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(15.1), 405, 408, 404.049988, 407.149994, 3532742));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(15.2), 408.700012, 409.799988, 404, 404.950012, 3160377));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(15.3), 414.149994, 420.200012, 414, 418.649994, 4065890));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(15.4), 405.5, 408, 404.049988, 406.950012, 3590902));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(15.5), 407.950012, 417.75, 407.5, 416.350006, 4238065));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(15.6), 407, 424.950012, 405.799988, 415.25, 22879930));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(15.7), 405, 414.350006, 401, 404.700012, 11757106));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(15.8), 409.950012, 413, 408.049988, 411.149994, 4411433));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(15.9), 409.649994, 411.899994, 407.100006, 408.100006, 1999281));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(16), 412.399994, 417.5, 409.950012, 416.350006, 7862142));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(16.1), 408, 410, 406.450012, 408.399994, 11030976));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(16.2), 406.299988, 408, 403.5, 404.049988, 3404230));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(16.3), 405.5, 408, 404.049988, 406.950012, 3590902));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(16.4), 405.899994, 405.899994, 399, 402.799988, 2699809));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(16.5), 415.5, 418.5, 412.549988, 417.799988, 4654694));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(16.6), 413.25, 416.200012, 409.5, 415.149994, 2896090));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(16.7), 414.149994, 420.200012, 414, 418.649994, 4065890));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(16.8), 408, 410, 406.450012, 408.399994, 11030976));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(16.9), 411.450012, 412.450012, 407.649994, 408.049988, 1700987));
            this.WIPRO.Add(new StockData("WIPRO", date.AddHours(17), 407.950012, 417.75, 407.5, 416.350006, 4238065));
            WIPRO = WIPRO.Where(item => item != null && (item.Date.Hour < Today.Hour || (item.Date.Hour == Today.Hour && item.Date.Minute <= Today.Minute))).ToObservableCollection();

            this.BEL = new ObservableCollection<StockData>();

            this.BEL.Add(new StockData("BEL", date.AddHours(8), 134.050003, 138.399994, 133.899994, 137.850006, 23415545));
            this.BEL.Add(new StockData("BEL", date.AddHours(8.1), 134.550003, 135.050003, 132.199997, 133.199997, 14954352));
            this.BEL.Add(new StockData("BEL", date.AddHours(8.2), 135.5, 135.5, 134.25, 134.550003, 12555619));
            this.BEL.Add(new StockData("BEL", date.AddHours(8.3), 135.300003, 135.850006, 134.100006, 134.550003, 11118400));
            this.BEL.Add(new StockData("BEL", date.AddHours(8.4), 136.100006, 136.399994, 134.600006, 134.899994, 13346571));
            this.BEL.Add(new StockData("BEL", date.AddHours(8.5), 137.25, 137.949997, 133.050003, 133.399994, 33919926));
            this.BEL.Add(new StockData("BEL", date.AddHours(8.6), 135.050003, 135.5, 133.600006, 134.399994, 17543374));
            this.BEL.Add(new StockData("BEL", date.AddHours(8.7), 131.449997, 131.600006, 128.25, 128.699997, 7162118));
            this.BEL.Add(new StockData("BEL", date.AddHours(8.8), 131.949997, 131.949997, 129.449997, 130.5, 8529502));
            this.BEL.Add(new StockData("BEL", date.AddHours(8.9), 130.449997, 130.699997, 123.699997, 125.349998, 20816954));
            this.BEL.Add(new StockData("BEL", date.AddHours(9), 131.600006, 133.149994, 129.100006, 129.399994, 11116731));
            this.BEL.Add(new StockData("BEL", date.AddHours(9.1), 130.300003, 131, 128.850006, 130.699997, 16197160));
            this.BEL.Add(new StockData("BEL", date.AddHours(9.2), 134.550003, 135.050003, 132.199997, 133.199997, 14954352));
            this.BEL.Add(new StockData("BEL", date.AddHours(9.3), 131, 133.25, 130.050003, 130.449997, 17079508));
            this.BEL.Add(new StockData("BEL", date.AddHours(9.4), 135.5, 135.5, 134.25, 134.550003, 12555619));
            this.BEL.Add(new StockData("BEL", date.AddHours(9.5), 134.050003, 138.399994, 133.899994, 137.850006, 23415545));
            this.BEL.Add(new StockData("BEL", date.AddHours(9.6), 137.25, 137.949997, 133.050003, 133.399994, 33919926));
            this.BEL.Add(new StockData("BEL", date.AddHours(9.7), 129.25, 131.699997, 128, 130.149994, 37245053));
            this.BEL.Add(new StockData("BEL", date.AddHours(9.8), 130.449997, 130.699997, 123.699997, 125.349998, 20816954));
            this.BEL.Add(new StockData("BEL", date.AddHours(9.9), 135.050003, 135.5, 133.600006, 134.399994, 17543374));
            this.BEL.Add(new StockData("BEL", date.AddHours(10), 135.300003, 135.850006, 134.100006, 134.550003, 11118400));
            this.BEL.Add(new StockData("BEL", date.AddHours(10.1), 128.449997, 129.199997, 126.599998, 128.550003, 8339894));
            this.BEL.Add(new StockData("BEL", date.AddHours(10.2), 136.100006, 136.399994, 134.600006, 134.899994, 13346571));
            this.BEL.Add(new StockData("BEL", date.AddHours(10.3), 131.449997, 131.600006, 128.25, 128.699997, 7162118));
            this.BEL.Add(new StockData("BEL", date.AddHours(10.4), 137.25, 137.949997, 133.050003, 133.399994, 33919926));
            this.BEL.Add(new StockData("BEL", date.AddHours(10.5), 131.600006, 133.149994, 129.100006, 129.399994, 11116731));
            this.BEL.Add(new StockData("BEL", date.AddHours(10.6), 131, 133.25, 130.050003, 130.449997, 17079508));
            this.BEL.Add(new StockData("BEL", date.AddHours(10.7), 131.949997, 131.949997, 129.449997, 130.5, 8529502));
            this.BEL.Add(new StockData("BEL", date.AddHours(10.8), 130.449997, 130.699997, 123.699997, 125.349998, 20816954));
            this.BEL.Add(new StockData("BEL", date.AddHours(10.9), 134.550003, 135.050003, 132.199997, 133.199997, 14954352));
            this.BEL.Add(new StockData("BEL", date.AddHours(11), 134.050003, 138.399994, 133.899994, 137.850006, 23415545));
            this.BEL.Add(new StockData("BEL", date.AddHours(11.1), 130.300003, 131, 128.850006, 130.699997, 16197160));
            this.BEL.Add(new StockData("BEL", date.AddHours(11.2), 135.5, 135.5, 134.25, 134.550003, 12555619));
            this.BEL.Add(new StockData("BEL", date.AddHours(11.3), 130.300003, 131, 128.850006, 130.699997, 16197160));
            this.BEL.Add(new StockData("BEL", date.AddHours(11.4), 129.25, 131.699997, 128, 130.149994, 37245053));
            this.BEL.Add(new StockData("BEL", date.AddHours(11.5), 137.25, 137.949997, 133.050003, 133.399994, 33919926));
            this.BEL.Add(new StockData("BEL", date.AddHours(11.6), 128.300003, 128.5, 126.550003, 127.650002, 18031857));
            this.BEL.Add(new StockData("BEL", date.AddHours(11.7), 135.050003, 135.5, 133.600006, 134.399994, 17543374));
            this.BEL.Add(new StockData("BEL", date.AddHours(11.8), 130.449997, 130.699997, 123.699997, 125.349998, 20816954));
            this.BEL.Add(new StockData("BEL", date.AddHours(11.9), 129.25, 131.699997, 128, 130.149994, 37245053));
            this.BEL.Add(new StockData("BEL", date.AddHours(12), 135.300003, 135.850006, 134.100006, 134.550003, 11118400));
            this.BEL.Add(new StockData("BEL", date.AddHours(12.1), 128.449997, 129.199997, 126.599998, 128.550003, 8339894));
            this.BEL.Add(new StockData("BEL", date.AddHours(12.2), 131.600006, 133.149994, 129.100006, 129.399994, 11116731));
            this.BEL.Add(new StockData("BEL", date.AddHours(12.3), 128.699997, 130, 127.599998, 129.149994, 12505272));
            this.BEL.Add(new StockData("BEL", date.AddHours(12.4), 131, 133.25, 130.050003, 130.449997, 17079508));
            this.BEL.Add(new StockData("BEL", date.AddHours(12.5), 134.550003, 135.050003, 132.199997, 133.199997, 14954352));
            this.BEL.Add(new StockData("BEL", date.AddHours(12.6), 137.25, 137.949997, 133.050003, 133.399994, 33919926));
            this.BEL.Add(new StockData("BEL", date.AddHours(12.7), 134.050003, 138.399994, 133.899994, 137.850006, 23415545));
            this.BEL.Add(new StockData("BEL", date.AddHours(12.8), 135.5, 135.5, 134.25, 134.550003, 12555619));
            this.BEL.Add(new StockData("BEL", date.AddHours(12.9), 133.949997, 135.399994, 132.800003, 133.399994, 19426832));
            this.BEL.Add(new StockData("BEL", date.AddHours(13), 136.100006, 136.399994, 134.600006, 134.899994, 13346571));
            this.BEL.Add(new StockData("BEL", date.AddHours(13.1), 131.449997, 131.600006, 128.25, 128.699997, 7162118));
            this.BEL.Add(new StockData("BEL", date.AddHours(13.2), 131.949997, 131.949997, 129.449997, 130.5, 8529502));
            this.BEL.Add(new StockData("BEL", date.AddHours(13.3), 131, 133.25, 130.050003, 130.449997, 17079508));
            this.BEL.Add(new StockData("BEL", date.AddHours(13.4), 130.449997, 130.699997, 123.699997, 125.349998, 20816954));
            this.BEL.Add(new StockData("BEL", date.AddHours(13.5), 130.300003, 131, 128.850006, 130.699997, 16197160));
            this.BEL.Add(new StockData("BEL", date.AddHours(13.6), 135.300003, 135.850006, 134.100006, 134.550003, 11118400));
            this.BEL.Add(new StockData("BEL", date.AddHours(13.7), 131.949997, 131.949997, 129.449997, 130.5, 8529502));
            this.BEL.Add(new StockData("BEL", date.AddHours(13.8), 128.449997, 129.199997, 126.599998, 128.550003, 8339894));
            this.BEL.Add(new StockData("BEL", date.AddHours(13.9), 130.449997, 130.699997, 123.699997, 125.349998, 20816954));
            this.BEL.Add(new StockData("BEL", date.AddHours(14), 130.300003, 131, 128.850006, 130.699997, 16197160));
            this.BEL.Add(new StockData("BEL", date.AddHours(14.1), 131.600006, 133.149994, 129.100006, 129.399994, 11116731));
            this.BEL.Add(new StockData("BEL", date.AddHours(14.2), 128.699997, 130, 127.599998, 129.149994, 12505272));
            this.BEL.Add(new StockData("BEL", date.AddHours(14.3), 127.75, 128.800003, 125, 125.5, 12374030));
            this.BEL.Add(new StockData("BEL", date.AddHours(14.4), 137.25, 137.949997, 133.050003, 133.399994, 33919926));
            this.BEL.Add(new StockData("BEL", date.AddHours(14.5), 133.949997, 135.399994, 132.800003, 133.399994, 19426832));
            this.BEL.Add(new StockData("BEL", date.AddHours(14.6), 135.5, 135.5, 134.25, 134.550003, 12555619));
            this.BEL.Add(new StockData("BEL", date.AddHours(14.7), 131.449997, 131.600006, 128.25, 128.699997, 7162118));
            this.BEL.Add(new StockData("BEL", date.AddHours(14.8), 127.75, 128.800003, 125, 125.5, 12374030));
            this.BEL.Add(new StockData("BEL", date.AddHours(14.9), 134.550003, 135.050003, 132.199997, 133.199997, 14954352));
            this.BEL.Add(new StockData("BEL", date.AddHours(15), 131, 133.25, 130.050003, 130.449997, 17079508));
            this.BEL.Add(new StockData("BEL", date.AddHours(15.1), 131, 133.25, 130.050003, 130.449997, 17079508));
            this.BEL.Add(new StockData("BEL", date.AddHours(15.2), 136.100006, 136.399994, 134.600006, 134.899994, 13346571));
            this.BEL.Add(new StockData("BEL", date.AddHours(15.3), 129.25, 131.699997, 128, 130.149994, 37245053));
            this.BEL.Add(new StockData("BEL", date.AddHours(15.4), 127.75, 128.800003, 125, 125.5, 12374030));
            this.BEL.Add(new StockData("BEL", date.AddHours(15.5), 128.300003, 128.5, 126.550003, 127.650002, 18031857));
            this.BEL.Add(new StockData("BEL", date.AddHours(15.6), 129.25, 131.699997, 128, 130.149994, 37245053));
            this.BEL.Add(new StockData("BEL", date.AddHours(15.7), 131.600006, 133.149994, 129.100006, 129.399994, 11116731));
            this.BEL.Add(new StockData("BEL", date.AddHours(15.8), 134.050003, 138.399994, 133.899994, 137.850006, 23415545));
            this.BEL.Add(new StockData("BEL", date.AddHours(15.9), 133.949997, 135.399994, 132.800003, 133.399994, 19426832));
            this.BEL.Add(new StockData("BEL", date.AddHours(16), 130.449997, 130.699997, 123.699997, 125.349998, 20816954));
            this.BEL.Add(new StockData("BEL", date.AddHours(16.1), 130.300003, 131, 128.850006, 130.699997, 16197160));
            this.BEL.Add(new StockData("BEL", date.AddHours(16.2), 131, 133.25, 130.050003, 130.449997, 17079508));
            this.BEL.Add(new StockData("BEL", date.AddHours(16.3), 135.300003, 135.850006, 134.100006, 134.550003, 11118400));
            this.BEL.Add(new StockData("BEL", date.AddHours(16.4), 135.5, 135.5, 134.25, 134.550003, 12555619));
            this.BEL.Add(new StockData("BEL", date.AddHours(16.5), 130.449997, 130.699997, 123.699997, 125.349998, 20816954));
            this.BEL.Add(new StockData("BEL", date.AddHours(16.6), 131.949997, 131.949997, 129.449997, 130.5, 8529502));
            this.BEL.Add(new StockData("BEL", date.AddHours(16.7), 128.699997, 130, 127.599998, 129.149994, 12505272));
            this.BEL.Add(new StockData("BEL", date.AddHours(16.8), 128.449997, 129.199997, 126.599998, 128.550003, 8339894));
            this.BEL.Add(new StockData("BEL", date.AddHours(16.9), 133.949997, 135.399994, 132.800003, 133.399994, 19426832));
            this.BEL.Add(new StockData("BEL", date.AddHours(17), 134.550003, 135.050003, 132.199997, 133.199997, 14954352));
            BEL = BEL.Where(item => item != null && (item.Date.Hour < Today.Hour || (item.Date.Hour == Today.Hour && item.Date.Minute <= Today.Minute))).ToObservableCollection();
        }

        public void ChangeAddIcon(object stockName)
        {
            string name = stockName.ToString();
            Stock stock = MySuggestedStockCollection.FirstOrDefault(s => s.StockName == name);

            var stockItem = MyWatchListStockCollection.FirstOrDefault(s => s.StockName == stock.StockName);
            Stock addedItem;
            if (stockItem==null)
            {
                addedItem = new Stock()
                {
                    Company = stock.Company,
                    CurrentChange= stock.CurrentChange,
                    CurrentClose= stock.CurrentClose,
                    CurrentHigh= stock.CurrentHigh,
                    Graph=stock.Graph,
                    Icon=stock.Icon,
                    PreviousChange= stock.PreviousChange,
                    PreviousClose= stock.PreviousClose,
                    PreviousHigh= stock.PreviousHigh,
                    Rating=stock.Rating,
                    StockName=stock.StockName,
                    StockLogo=stock.StockLogo,
                    StockVolume=stock.StockVolume,
                };
                 
                MyWatchListStockCollection.Add(addedItem); 
                addedItem.Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM4.5 8C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H4.5Z";
                stock.Icon = "M0 7.5C0 6.80729 0.0885417 6.14323 0.265625 5.50781C0.442708 4.86719 0.692708 4.26823 1.01562 3.71094C1.34375 3.15365 1.73438 2.64844 2.1875 2.19531C2.64583 1.73698 3.15365 1.34635 3.71094 1.02344C4.26823 0.695312 4.86458 0.442708 5.5 0.265625C6.14062 0.0885417 6.80729 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.724 0.703125 11.2812 1.03125C11.8385 1.35417 12.3438 1.74479 12.7969 2.20312C13.2552 2.65625 13.6458 3.16146 13.9688 3.71875C14.2969 4.27604 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.19271 14.9115 8.85938 14.7344 9.5C14.5573 10.1354 14.3047 10.7318 13.9766 11.2891C13.6536 11.8464 13.263 12.3542 12.8047 12.8125C12.3516 13.2656 11.8464 13.6562 11.2891 13.9844C10.7318 14.3073 10.1328 14.5573 9.49219 14.7344C8.85677 14.9115 8.19271 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.85938 14.5573 4.26042 14.3073 3.70312 13.9844C3.15104 13.6562 2.64583 13.2656 2.1875 12.8125C1.73438 12.3542 1.34375 11.849 1.01562 11.2969C0.692708 10.7396 0.442708 10.1406 0.265625 9.5C0.0885417 8.85938 0 8.19271 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6146 5.21615 13.3958 4.69792 13.1094 4.21875C12.8281 3.73438 12.4896 3.29688 12.0938 2.90625C11.7031 2.51042 11.2656 2.17188 10.7812 1.89062C10.3021 1.60417 9.78385 1.38542 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32292 1.07812 5.76562 1.23438C5.21354 1.38542 4.69531 1.60417 4.21094 1.89062C3.73177 2.17188 3.29427 2.51042 2.89844 2.90625C2.50781 3.29688 2.16927 3.73438 1.88281 4.21875C1.60156 4.69792 1.38281 5.21615 1.22656 5.77344C1.07552 6.32552 1 6.90104 1 7.5C1 8.09896 1.07552 8.67708 1.22656 9.23438C1.38281 9.78646 1.60156 10.3047 1.88281 10.7891C2.16406 11.2682 2.5026 11.7057 2.89844 12.1016C3.29427 12.4974 3.73177 12.8359 4.21094 13.1172C4.69531 13.3984 5.21354 13.6172 5.76562 13.7734C6.32292 13.9245 6.90104 14 7.5 14C8.09896 14 8.67448 13.9245 9.22656 13.7734C9.78385 13.6172 10.3021 13.3984 10.7812 13.1172C11.2656 12.8359 11.7057 12.4974 12.1016 12.1016C12.4974 11.7057 12.8359 11.2682 13.1172 10.7891C13.3984 10.3047 13.6146 9.78646 13.7656 9.23438C13.9219 8.67708 14 8.09896 14 7.5ZM4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7C4.63542 7 4.7526 7.04948 4.85156 7.14844L6.5 8.78906L10.1484 5.14844C10.2474 5.04948 10.3646 5 10.5 5C10.6354 5 10.7526 5.04948 10.8516 5.14844C10.9505 5.2474 11 5.36458 11 5.5C11 5.63542 10.9505 5.7526 10.8516 5.85156L6.85156 9.85156C6.7526 9.95052 6.63542 10 6.5 10C6.36458 10 6.2474 9.95052 6.14844 9.85156L4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5Z";
            }
            else
            {
                if(needToRemove)
                {
                    stock.Icon = "M0 7.5C0 6.8125 0.0885417 6.15104 0.265625 5.51562C0.447917 4.875 0.700521 4.27604 1.02344 3.71875C1.35156 3.16146 1.74219 2.65625 2.19531 2.20312C2.65365 1.74479 3.16146 1.35417 3.71875 1.03125C4.27604 0.703125 4.8724 0.450521 5.50781 0.273438C6.14844 0.0911458 6.8125 0 7.5 0C8.1875 0 8.84896 0.0911458 9.48438 0.273438C10.125 0.450521 10.7214 0.703125 11.2734 1.03125C11.8307 1.35417 12.3385 1.74479 12.7969 2.20312C13.2552 2.66146 13.6458 3.16927 13.9688 3.72656C14.2969 4.27865 14.5495 4.875 14.7266 5.51562C14.9089 6.15104 15 6.8125 15 7.5C15 8.1875 14.9089 8.85156 14.7266 9.49219C14.5495 10.1276 14.2969 10.724 13.9688 11.2812C13.6458 11.8385 13.2552 12.3464 12.7969 12.8047C12.3438 13.2578 11.8385 13.6484 11.2812 13.9766C10.724 14.2995 10.125 14.5521 9.48438 14.7344C8.84896 14.9115 8.1875 15 7.5 15C6.80729 15 6.14062 14.9115 5.5 14.7344C4.86458 14.5521 4.26823 14.2995 3.71094 13.9766C3.15885 13.6484 2.65365 13.2578 2.19531 12.8047C1.74219 12.3464 1.35156 11.8411 1.02344 11.2891C0.700521 10.7318 0.447917 10.1328 0.265625 9.49219C0.0885417 8.85156 0 8.1875 0 7.5ZM14 7.5C14 6.90104 13.9219 6.32552 13.7656 5.77344C13.6094 5.22135 13.3906 4.70573 13.1094 4.22656C12.8281 3.74219 12.4896 3.30208 12.0938 2.90625C11.6979 2.51042 11.2578 2.17188 10.7734 1.89062C10.2943 1.60938 9.77865 1.39062 9.22656 1.23438C8.67448 1.07812 8.09896 1 7.5 1C6.90104 1 6.32552 1.07812 5.77344 1.23438C5.22135 1.39062 4.70312 1.60938 4.21875 1.89062C3.73958 2.17188 3.30208 2.51042 2.90625 2.90625C2.51042 3.30208 2.17188 3.74219 1.89062 4.22656C1.60938 4.70573 1.39062 5.22135 1.23438 5.77344C1.07812 6.32552 1 6.90104 1 7.5C1 8.09896 1.07812 8.67448 1.23438 9.22656C1.39062 9.77865 1.60938 10.2969 1.89062 10.7812C2.17188 11.2604 2.51042 11.6979 2.90625 12.0938C3.30208 12.4896 3.73958 12.8281 4.21875 13.1094C4.70312 13.3906 5.22135 13.6094 5.77344 13.7656C6.32552 13.9219 6.90104 14 7.5 14C8.09896 14 8.67448 13.9219 9.22656 13.7656C9.77865 13.6094 10.2943 13.3906 10.7734 13.1094C11.2578 12.8281 11.6979 12.4896 12.0938 12.0938C12.4896 11.6979 12.8281 11.2604 13.1094 10.7812C13.3906 10.2969 13.6094 9.77865 13.7656 9.22656C13.9219 8.67448 14 8.09896 14 7.5ZM7 8H4.5C4.36458 8 4.2474 7.95052 4.14844 7.85156C4.04948 7.7526 4 7.63542 4 7.5C4 7.36458 4.04948 7.2474 4.14844 7.14844C4.2474 7.04948 4.36458 7 4.5 7H7V4.5C7 4.36458 7.04948 4.2474 7.14844 4.14844C7.2474 4.04948 7.36458 4 7.5 4C7.63542 4 7.7526 4.04948 7.85156 4.14844C7.95052 4.2474 8 4.36458 8 4.5V7H10.5C10.6354 7 10.7526 7.04948 10.8516 7.14844C10.9505 7.2474 11 7.36458 11 7.5C11 7.63542 10.9505 7.7526 10.8516 7.85156C10.7526 7.95052 10.6354 8 10.5 8H8V10.5C8 10.6354 7.95052 10.7526 7.85156 10.8516C7.7526 10.9505 7.63542 11 7.5 11C7.36458 11 7.2474 10.9505 7.14844 10.8516C7.04948 10.7526 7 10.6354 7 10.5V8Z";
                    MyWatchListStockCollection.Remove(stockItem);
                } 
            }
        }
          
        public ICommand AddCommand
        {
            get
            {
                return addCommand;
            }
        }

        public void OnPropertyChanged(string property)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(property));
            }
        } 
        public event PropertyChangedEventHandler PropertyChanged; 
    }
}
